{"version":3,"sources":["pages/AuthPages/AuthPages.module.css","components/Menu/Menu.module.css","pages/AdminPages/MenuPages.module.css","pages/EmployerPages/MenuPages.module.css","components/Modal/Modal.module.css","components/Auth/AuthPage.module.css","components/Input/Input.module.css","components/List/List.module.css","components/Button/Button.module.css","components/Text/Text.module.css","components/DoubleLineText/DoubleLineText.module.css","components/Head/Head.module.css","components/Body/Body.module.css","logo.svg","img/profile.png","api/RestApi.js","components/Head/Head.jsx","components/Input/Input.jsx","components/Button/Button.jsx","api/AuthApi.js","redux/actions/index.js","pages/AuthPages/UserAuth.jsx","pages/AuthPages/AdminAuth.jsx","api/EmployersApi.js","pages/AuthPages/RegistrationPanel.jsx","pages/AuthPages/Registration.jsx","components/Redirect/Redirect.jsx","components/Auth/AuthPage.jsx","components/Menu/AdminMenu.jsx","components/Modal/Modal.jsx","pages/EmployerPages/Team/Methods.js","components/Text/Text.jsx","components/DoubleLineText/DoubleLineText.jsx","components/List/List.jsx","pages/EmployerPages/Team/List.jsx","pages/EmployerPages/Team/Team.jsx","pages/EmployerPages/Task/Methods.js","pages/EmployerPages/Task/List.jsx","pages/EmployerPages/Task/Task.jsx","pages/AdminPages/Teams/Methods.js","pages/AdminPages/Tools/List.jsx","pages/AdminPages/Tools/Methods.js","pages/AdminPages/Tools/Tools.jsx","pages/AdminPages/Materials/List.jsx","pages/AdminPages/Materials/Methods.js","pages/AdminPages/Materials/Materials.jsx","components/Logout/Logout.jsx","pages/AdminPages/Teams/List.jsx","pages/AdminPages/Teams/Teams.jsx","pages/AdminPages/Tasks/Methods.js","pages/AdminPages/Tasks/List.jsx","pages/AdminPages/Tasks/Tasks.jsx","pages/AdminPages/Employers/List.jsx","pages/AdminPages/Employers/Methods.js","pages/AdminPages/Employers/Employers.jsx","components/Body/Body.jsx","components/Menu/EmployerMenu.jsx","components/Panel/Panel.jsx","App.js","reportWebVitals.js","redux/reducers/index.js","index.js"],"names":["module","exports","get","address","stringToken","a","fetch","method","headers","then","response","ok","json","post","dto","body","JSON","stringify","status","put","del","Head","profile","profileImg","useState","companyName","setCompanyName","useEffect","console","log","sessionStorage","getItem","company","name","getMethod","className","styles","src","logo","alt","Input","placeholder","icon","background","inputState","setInputState","type","callback","InputGroup","id","required","InputArea","onChange","e","target","value","onInputChange","style","backgroundColor","htmlFor","Label","Icon","Button","text","onClick","ButtonContainer","Text","postRegistrationData","register","RegistrationDto","employer","username","lastName","age","pessel","street","cityCode","city","phone","position","salary","password","postLoginData","setTeamName","payload","setTeamCity","setTeamUsername","setTeamValidation","validation","setTeamEmployers","teamEmployers","setTeamEmployerUsername","setTeamEmployerValidation","setTeamEmployerTeamId","setTeamEmployerNr","nr","setToolValidation","setMaterialValidation","setTaskName","setTaskTeamName","teamName","setTaskValidation","setTaskTools","tools","setTaskToolNr","setTaskToolTaskId","taskId","setTaskToolToolName","toolName","setTaskToolValidation","setTaskMaterials","materials","setTaskMaterialNr","setTaskMaterialTaskId","setTaskMaterialMaterialName","materialName","setTaskMaterialValidation","setRegisterStep","step","setRegisterPosition","setRegisterSalary","setRegisterValidation","UserAuth","useDispatch","history","useHistory","setUsername","setPassword","AuthPages","NavLinks","activeClassName","ActiveLink","Link","to","Person","Security","Submit","LockOpen","fontSize","authTokenDto","setItem","bearer","push","getAuthTokenDto","AdminAuth","getEmployers","notExpired","data","map","postEmployer","employerDto","role","UserBasics","useSelector","state","dispatch","Inputs","setRegisterUsername","setRegisterPassword","passwordRepeat","setRegisterPasswordRepeat","SubmitCreate","SubmitAdd","ArrowForward","alert","UserDetails","setRegisterName","setRegisterLastName","setRegisterAge","setRegisterPessel","ArrowBack","UserContact","setRegisterStreet","setRegisterCity","setRegisterCityCode","setRegisterPhone","CompanyGenerator","summit","setRegisterCompanyName","CompanyAdder","setRegisterRole","RegistrationPanel","registrationAsync","Registration","Redirect","AuthPage","AuthorizationAdd","Logo","Business","LogoIcon","path","exact","render","component","Option","AdminMenu","Menu","People","Assignment","Build","Layers","PowerSettingsNew","openDialog","modal","document","getElementById","classList","add","modalStyles","ModalVisible","Modal","title","inputs","onCleaning","validate","setValidate","closeDialog","remove","ModalContainer","input","index","Buttons","Close","Add","addEmployerToTeam","addTeamEmployer","teamId","setTeamId","setState","putMethod","team","employers","content","variant","Classic","Bold","Special","getVariant","DoubleLineText","firstLine","secondLine","FirstLine","SecondLine","List","labels","sizing","template","active","cursor","gridLayout","display","alignContent","gridTemplateColumns","gap","Labels","label","rowData","ActiveRow","Row","TeamsList","setData","addTeam","getTeamEmployerList","length","modalInputs","setName","setCity","LocationCity","getTeamModalInputs","place","leader","postMethod","saveTeam","TeamEmployersList","modal2Inputs","Teams","MenuPages","Header","addToolToTask","addToolTask","setToolId","tool","task","addMaterialToTask","addMaterialTask","setMaterialId","material","delMaterial","delMaterials","forEach","uncheckTool","uncheckTools","delTask","filter","TaskList","taskTools","taskMaterials","addTask","addTaskTool","deleteMethod","clear","deleteTaskAsync","finishTask","Search","getTaskModalInputs","DeleteForever","getTaskMaterials","saveTask","TaskToolsList","category","model","identityNo","TaskMaterialsList","addTaskMaterial","supplier","count","measure","Tasks","HorizontalSplit2","ToolsList","addTool","deleteToolAsync","deleteTool","setCategory","setModel","setIdentityNo","getToolModalInputs","setToolCategory","setToolName","setToolModel","setToolIdentityNo","saveTool","Tools","MaterialsList","addMaterial","deleteMaterial","setSupplier","setCount","setMeasure","getMaterialModalInputs","setMaterialCategory","setMaterialName","setMaterialSupplier","setMaterialCount","setMaterialMeasure","saveMaterial","Materials","Logout","removeItem","window","location","reload","deleteEmployerAsync","deleteEmployer","deleteTask","EmployersList","saveEmployer","Employers","Body","employersDataActive","setEmployersDataActive","setEmployersDataArchival","teamsData","setTeamsData","toolsData","setToolsData","materialsData","setMaterialsData","tasksData","setTasksData","teamData","setTeamData","taskData","setTaskData","initEmployersDataActive","initEmployersDataArchival","initTeamsData","initToolsData","initMaterialsData","initTasksData","initTeamData","initTaskData","getInitDataAsync","Team","Task","EmployerMenu","Panel","checkAuthorities","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","employerId","toolId","materialId","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.64c2e0d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthPages\":\"AuthPages_AuthPages__3dmT7\",\"NavLinks\":\"AuthPages_NavLinks__1b7i-\",\"Link\":\"AuthPages_Link__11Vpk\",\"ActiveLink\":\"AuthPages_ActiveLink__38Pu3\",\"SubmitCreate\":\"AuthPages_SubmitCreate__3pKZj\",\"SubmitAdd\":\"AuthPages_SubmitAdd__11VXU\",\"Inputs\":\"AuthPages_Inputs__RbICC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__zteKc\",\"Link\":\"Menu_Link__U_acx\",\"ActiveLink\":\"Menu_ActiveLink__2tnxE\",\"Option\":\"Menu_Option__2n2tO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuPages\":\"MenuPages_MenuPages__3oQfX\",\"HorizontalSplit2\":\"MenuPages_HorizontalSplit2__35PU3\",\"Header\":\"MenuPages_Header__1yAWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuPages\":\"MenuPages_MenuPages__2Cl3a\",\"HorizontalSplit2\":\"MenuPages_HorizontalSplit2__3-xF2\",\"Header\":\"MenuPages_Header__1OeDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2WBTT\",\"ModalContainer\":\"Modal_ModalContainer__2MQb-\",\"ModalVisible\":\"Modal_ModalVisible__307Qp\",\"Inputs\":\"Modal_Inputs__2xF87\",\"Buttons\":\"Modal_Buttons__pKHs7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthPage\":\"AuthPage_AuthPage__1fS3n\",\"AuthorizationAdd\":\"AuthPage_AuthorizationAdd__1abMm\",\"Logo\":\"AuthPage_Logo__1rGsO\",\"LogoIcon\":\"AuthPage_LogoIcon__wHoQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputGroup\":\"Input_InputGroup__1TdLO\",\"InputArea\":\"Input_InputArea__2mJxz\",\"Label\":\"Input_Label__2XMBp\",\"Icon\":\"Input_Icon__2ypPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__Rb6_T\",\"Labels\":\"List_Labels__1y3yD\",\"Row\":\"List_Row__37OyU\",\"ActiveRow\":\"List_ActiveRow__2df6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonContainer\":\"Button_ButtonContainer__3M82t\",\"Button\":\"Button_Button__3R1xi\",\"Text\":\"Button_Text__2l07n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Classic\":\"Text_Classic__1Vv11\",\"Special\":\"Text_Special__19wOn\",\"Bold\":\"Text_Bold__2ur9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DoubleLineText\":\"DoubleLineText_DoubleLineText__xfzxk\",\"FirstLine\":\"DoubleLineText_FirstLine__3lubz\",\"SecondLine\":\"DoubleLineText_SecondLine__1rfAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Head\":\"Head_Head__1QZdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"Body_Body__3G-xz\"};","export default __webpack_public_path__ + \"static/media/logo.a958ca2f.svg\";","export default __webpack_public_path__ + \"static/media/profile.aacb5e99.png\";","const get = async (address, stringToken) => {\n    return await fetch(address, {\n        method: 'GET',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer '+stringToken\n        }\n    }).then((response)=>{\n        if(response.ok){\n            return response.json()\n        } else{\n            throw \"Forbidden\"\n        }\n    })\n}\n\nconst post = async (address, dto, stringToken) => {\n    return await fetch(address, {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer '+stringToken\n        },\n        body: JSON.stringify(dto)\n    }).then((response)=>{\n        if(response.status === 200){\n            return response.json()\n        } else if(response.status === 403){\n            throw \"Forbidden\"\n        } else{\n            throw \"BadRequest\"\n        }\n    })\n}\n\nconst put = async (address, dto, stringToken) => {\n    return await fetch(address, {\n        method: 'PUT',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer '+stringToken\n        },\n        body: JSON.stringify(dto)\n    }).then((response)=>{\n        if(response.status === 200){\n            return response.json()\n        } else if(response.status === 403){\n            throw \"Forbidden\"\n        } else{\n            throw \"BadRequest\"\n        }\n    })\n}\n\nconst del = async (address, stringToken) => {\n    return await fetch(address, {\n        method: 'DELETE',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer '+stringToken\n        }\n    }).then((response)=>{\n        if(response.status === 200){\n            return response.json()\n        } else if(response.status === 403){\n            throw \"Forbidden\"\n        } else{\n            throw \"BadRequest\"\n        }\n    })\n}\n\nexport {\n    get,\n    post,\n    put,\n    del\n}","import styles from './Head.module.css'\nimport logo from '../../logo.svg'\nimport profileImg from '../../img/profile.png'\nimport {useEffect, useState} from \"react\";\nimport {get} from \"../../api/RestApi\";\n\nconst Head = () => {\n    const profile = profileImg\n\n    const [companyName, setCompanyName] = useState(\"\")\n\n    const getCompany = () => {\n        const getMethod = async () => {\n            try{\n                const company = await get('http://localhost:8080/api/company', sessionStorage.getItem(\"JWT\"))\n                console.log(company)\n                setCompanyName(company.name)\n            } catch (exception){}\n        }\n        getMethod()\n    }\n\n    useEffect(()=>{\n        console.log(\"Head\")\n        getCompany()\n    })\n\n    return(\n        <div className={styles.Head}>\n            <img src={logo} alt='Logo'/>\n            <p>Planning System</p>\n            <p>{companyName}</p>\n            <img src={profile} alt='Profile'/>\n        </div>\n    )\n}\n\nexport default Head","import styles from './Input.module.css'\nimport {useEffect} from \"react\";\n\nconst Input = ({placeholder, icon, background='default', inputState, setInputState, type=\"text\", callback=()=>{}}) => {\n\n    useEffect(()=>{\n        if(inputState!==\"\")\n            callback()\n    }, [inputState])\n\n    const onInputChange = (e) => {\n        setInputState(e.target.value)\n    }\n\n    return(\n        <div>\n            <div className={styles.InputGroup}>\n                <input type={type} id=\"inputField\" required className={styles.InputArea} onChange={(e)=>onInputChange(e)} value={inputState}/>\n                <label style={background !== 'default' ? {backgroundColor: background} : {}}  htmlFor=\"inputField\" className={styles.Label}>{placeholder}</label>\n                <div className={styles.Icon}>\n                    {icon}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Input","import styles from './Button.module.css'\n\nconst Button = ({icon, text, onClick}) => {\n    return(\n        <div className={styles.ButtonContainer}>\n            <div className={styles.Button} onClick={()=>onClick()}>\n                {icon}\n                <p className={styles.Text}>{text}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Button\n\n","const postRegistrationData = async (register) => {\n    const RegistrationDto = {\n        employer: {\n            username: register.username,\n            name: register.name,\n            lastName: register.lastName,\n            age: register.age,\n            pessel: register.pessel,\n            street: register.street,\n            cityCode: register.cityCode,\n            city: register.city,\n            phone: register.phone,\n            position: register.position,\n            salary: register.salary,\n            password: register.password\n        },\n        company: {\n            name: register.companyName\n        }\n    }\n    console.log(RegistrationDto)\n    return await fetch('http://localhost:8080/api/auth/signup/create', {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(RegistrationDto)\n    }).then((response)=>{\n        if(response.status === 200){\n            return response.json()\n        } else if(response.status === 403){\n            throw \"Forbidden\"\n        } else{\n            throw \"BadRequest\"\n        }\n    })\n}\n\nconst postLoginData = async (username, password) => {\n    const employer = {\n        username: username,\n        password: password\n    }\n    return await fetch('http://localhost:8080/api/auth/login', {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify(employer)\n    }).then((response)=>{\n        if(response.status === 200){\n            return response.json()\n        } else if(response.status === 403){\n            throw \"Forbidden\"\n        } else{\n            throw response\n        }\n    })\n}\n\nexport {\n    postRegistrationData,\n    postLoginData\n}","export const setTeamName = (name) => {\n    return{\n        type: 'SET_TEAM_NAME',\n        payload: name\n    }\n}\nexport const setTeamCity = (city) => {\n    return{\n        type: 'SET_TEAM_CITY',\n        payload: city\n    }\n}\nexport const setTeamUsername = (username) => {\n    return{\n        type: 'SET_TEAM_USERNAME',\n        payload: username\n    }\n}\nexport const setTeamValidation = (validation) => {\n    return{\n        type: 'SET_TEAM_VALIDATION',\n        payload: validation\n    }\n}\nexport const clearAllTeam = () => {\n    return{\n        type: 'CLEAR_ALL_TEAM',\n    }\n}\n\nexport const setTeamEmployers = (teamEmployers=[]) => {\n    return{\n        type: 'SET_TEAM_EMPLOYERS',\n        payload: teamEmployers\n    }\n}\n\nexport const setTeamEmployerUsername = (username) => {\n    return{\n        type: 'SET_TEAM_EMPLOYER_USERNAME',\n        payload: username\n    }\n}\n\nexport const setTeamEmployerValidation = (validation) => {\n    return{\n        type: 'SET_TEAM_EMPLOYER_VALIDATION',\n        payload: validation\n    }\n}\n\nexport const setTeamEmployerTeamId = (id) => {\n    return{\n        type: 'SET_TEAM_EMPLOYER_TEAM_ID',\n        payload: id\n    }\n}\n\nexport const setTeamEmployerId = (id) => {\n    return{\n        type: 'SET_TEAM_EMPLOYER_ID',\n        payload: id\n    }\n}\n\nexport const setTeamEmployerNr = (nr) => {\n    return{\n        type: 'SET_TEAM_EMPLOYER_NR',\n        payload: nr\n    }\n}\n\nexport const setToolCategory = (category) => {\n    return{\n        type: 'SET_TOOL_CATEGORY',\n        payload: category\n    }\n}\n\nexport const setToolName = (name) => {\n    return{\n        type: 'SET_TOOL_NAME',\n        payload: name\n    }\n}\n\nexport const setToolModel = (model) => {\n    return{\n        type: 'SET_TOOL_MODEL',\n        payload: model\n    }\n}\n\nexport const setToolIdentityNo = (identityNo) => {\n    return{\n        type: 'SET_TOOL_IDENTITY_NO',\n        payload: identityNo\n    }\n}\n\nexport const setToolValidation = (validation) => {\n    return{\n        type: 'SET_TOOL_VALIDATION',\n        payload: validation\n    }\n}\n\nexport const clearAllTool = () => {\n    return{\n        type: 'CLEAR_ALL_TOOL'\n    }\n}\n\nexport const setMaterialCategory = (category) => {\n    return{\n        type: 'SET_MATERIAL_CATEGORY',\n        payload: category\n    }\n}\n\nexport const setMaterialName = (name) => {\n    return{\n        type: 'SET_MATERIAL_NAME',\n        payload: name\n    }\n}\n\nexport const setMaterialSupplier = (supplier) => {\n    return{\n        type: 'SET_MATERIAL_SUPPLIER',\n        payload: supplier\n    }\n}\n\nexport const setMaterialCount = (count) => {\n    return{\n        type: 'SET_MATERIAL_COUNT',\n        payload: count\n    }\n}\n\nexport const setMaterialMeasure = (measure) => {\n    return{\n        type: 'SET_MATERIAL_MEASURE',\n        payload: measure\n    }\n}\n\nexport const setMaterialValidation = (validation) => {\n    return{\n        type: 'SET_MATERIAL_VALIDATION',\n        payload: validation\n    }\n}\n\nexport const clearAllMaterial = () => {\n    return{\n        type: 'CLEAR_ALL_MATERIAL'\n    }\n}\n\n/*\nexport const setTaskNr = (nr) => {\n    return{\n        type: 'SET_TASK_NR',\n        payload: nr\n    }\n}\n\nexport const setTaskId = (id) => {\n    return{\n        type: 'SET_TASK_ID',\n        payload: id\n    }\n}\n\nexport const setTaskTeamId = (teamId) => {\n    return{\n        type: 'SET_TASK_TEAM_ID',\n        payload: teamId\n    }\n}\n\nexport const setTaskUsername = (username) => {\n    return{\n        type: 'SET_TASK_USERNAME',\n        payload: username\n    }\n}\n\nexport const setTaskName = (name) => {\n    return{\n        type: 'SET_TASK_NAME',\n        payload: name\n    }\n}\n\nexport const setTaskStatus = (status) => {\n    return{\n        type: 'SET_TASK_STATUS',\n        payload: status\n    }\n}\n\nexport const setTaskDescription = (description) => {\n    return{\n        type: 'SET_TASK_DESCRIPTION',\n        payload: description\n    }\n}\n\nexport const setTaskValidation = (validation) => {\n    return{\n        type: 'SET_TASK_VALIDATION',\n        payload: validation\n    }\n}\n\nexport const clearAllTask = () => {\n    return{\n        type: 'CLEAR_ALL_TASK',\n    }\n}*/\n\nexport const setTaskName = (name) => {\n    return{\n        type: 'SET_TASK_NAME',\n        payload: name\n    }\n}\n\nexport const setTaskTeamName = (teamName) => {\n    return{\n        type: 'SET_TASK_TEAM_NAME',\n        payload: teamName\n    }\n}\n\nexport const setTaskValidation = (validation) => {\n    return{\n        type: 'SET_TASK_VALIDATION',\n        payload: validation\n    }\n}\n\nexport const clearAllTask = () => {\n    return{\n        type: 'CLEAR_ALL_TASK'\n    }\n}\n\nexport const setTaskTools = (tools) => {\n    return{\n        type: 'SET_TASK_TOOLS',\n        payload: tools\n    }\n}\n\nexport const setTaskToolNr = (nr) => {\n    return{\n        type: 'SET_TASK_TOOL_NR',\n        payload: nr\n    }\n}\n\nexport const setTaskToolTaskId = (taskId) => {\n    return{\n        type: 'SET_TASK_TOOL_TASK_ID',\n        payload: taskId\n    }\n}\n\nexport const setTaskToolToolId = (toolId) => {\n    return{\n        type: 'SET_TASK_TOOL_TOOL_ID',\n        payload: toolId\n    }\n}\n\nexport const setTaskToolToolName = (toolName) => {\n    return{\n        type: 'SET_TASK_TOOL_TOOL_NAME',\n        payload: toolName\n    }\n}\n\nexport const setTaskToolValidation = (validation) => {\n    return{\n        type: 'SET_TASK_TOOL_VALIDATION',\n        payload: validation\n    }\n}\n\nexport const clearAllTaskTool = () => {\n    return{\n        type: 'CLEAR_ALL_TASK_TOOL'\n    }\n}\n\nexport const setTaskMaterials = (materials) => {\n    return{\n        type: 'SET_TASK_MATERIALS',\n        payload: materials\n    }\n}\n\nexport const setTaskMaterialNr = (nr) => {\n    return{\n        type: 'SET_TASK_MATERIAL_NR',\n        payload: nr\n    }\n}\n\nexport const setTaskMaterialTaskId = (taskId) => {\n    return{\n        type: 'SET_TASK_MATERIAL_TASK_ID',\n        payload: taskId\n    }\n}\n\nexport const setTaskMaterialMaterialId = (materialId) => {\n    return{\n        type: 'SET_TASK_MATERIAL_MATERIAL_ID',\n        payload: materialId\n    }\n}\n\nexport const setTaskMaterialMaterialName = (materialName) => {\n    return{\n        type: 'SET_TASK_MATERIAL_MATERIAL_NAME',\n        payload: materialName\n    }\n}\n\nexport const setTaskMaterialValidation = (validation) => {\n    return{\n        type: 'SET_TASK_MATERIAL_VALIDATION',\n        payload: validation\n    }\n}\n\nexport const clearAllTaskMaterial = () => {\n    return{\n        type: 'CLEAR_ALL_TASK_MATERIAL',\n    }\n}\n\nexport const setRegisterStep = (step) => {\n    return{\n        type: 'SET_REGISTER_STEP',\n        payload: step\n    }\n}\n\nexport const setRegisterUsername = (username) => {\n    return{\n        type: 'SET_REGISTER_USERNAME',\n        payload: username\n    }\n}\n\nexport const setRegisterPassword = (password) => {\n    return{\n        type: 'SET_REGISTER_PASSWORD',\n        payload: password\n    }\n}\n\nexport const setRegisterPasswordRepeat = (passwordRepeat) => {\n    return{\n        type: 'SET_REGISTER_PASSWORD_REPEAT',\n        payload: passwordRepeat\n    }\n}\n\nexport const setRegisterName = (name) => {\n    return{\n        type: 'SET_REGISTER_NAME',\n        payload: name\n    }\n}\n\nexport const setRegisterLastName = (lastName) => {\n    return{\n        type: 'SET_REGISTER_LAST_NAME',\n        payload: lastName\n    }\n}\n\nexport const setRegisterAge = (age) => {\n    return{\n        type: 'SET_REGISTER_AGE',\n        payload: age\n    }\n}\n\nexport const setRegisterPessel = (pessel) => {\n    return{\n        type: 'SET_REGISTER_PESSEL',\n        payload: pessel\n    }\n}\n\nexport const setRegisterStreet = (street) => {\n    return{\n        type: 'SET_REGISTER_STREET',\n        payload: street\n    }\n}\n\nexport const setRegisterCity = (city) => {\n    return{\n        type: 'SET_REGISTER_CITY',\n        payload: city\n    }\n}\n\nexport const setRegisterCityCode = (cityCode) => {\n    return{\n        type: 'SET_REGISTER_CITY_CODE',\n        payload: cityCode\n    }\n}\n\nexport const setRegisterPhone = (phone) => {\n    return{\n        type: 'SET_REGISTER_PHONE',\n        payload: phone\n    }\n}\n\nexport const setRegisterCompanyName = (companyName) => {\n    return{\n        type: 'SET_REGISTER_COMPANY_NAME',\n        payload: companyName\n    }\n}\n\nexport const setRegisterRole = (role) => {\n    return{\n        type: 'SET_REGISTER_ROLE',\n        payload: role\n    }\n}\n\nexport const setRegisterPosition = (position) => {\n    return{\n        type: 'SET_REGISTER_POSITION',\n        payload: position\n    }\n}\n\nexport const setRegisterSalary = (salary) => {\n    return{\n        type: 'SET_REGISTER_SALARY',\n        payload: salary\n    }\n}\n\nexport const setRegisterValidation = (validation) => {\n    return{\n        type: 'SET_REGISTER_VALIDATION',\n        payload: validation\n    }\n}\n\nexport const clearAllRegister = () => {\n    return{\n        type: 'CLEAR_ALL_REGISTER'\n    }\n}","import styles from \"./AuthPages.module.css\"\nimport {useState} from \"react\";\nimport {NavLink, useHistory} from \"react-router-dom\";\nimport Input from \"../../components/Input/Input\";\nimport {LockOpen, Person, Security} from \"@material-ui/icons\";\nimport Button from \"../../components/Button/Button\";\nimport {postLoginData} from \"../../api/AuthApi\";\nimport {setUserType} from \"../../redux/actions\";\nimport {useDispatch} from \"react-redux\";\n\nconst UserAuth = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const login = () => {\n\n        const getAuthTokenDto = async () => {\n            try {\n                const authTokenDto = await postLoginData(username, password)\n                sessionStorage.setItem(\"JWT\", authTokenDto.bearer)\n                sessionStorage.setItem(\"user\", \"Employer\");\n                history.push(\"/employer/tasks\");\n            }catch (exception){\n\n            }\n        }\n        getAuthTokenDto()\n    }\n\n    return(\n        <div className={styles.AuthPages}>\n            <div className={styles.NavLinks}>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/auth/admin'>\n                    Admin Panel\n                </NavLink>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/auth/user'>\n                    Dashboard\n                </NavLink>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/auth/registration'>\n                    Rejestracja\n                </NavLink>\n            </div>\n            <Input placeholder=\"Nazwa użytkownika\" icon={<Person/>} inputState={username} setInputState={setUsername}/>\n            <Input type=\"password\" placeholder=\"Hasło\" icon={<Security/>} inputState={password} setInputState={setPassword}/>\n            <div className={styles.Submit}>\n                <Button icon={<LockOpen fontSize='small'/>} text='Zaloguj' onClick={()=>login()}/>\n            </div>\n        </div>\n    )\n}\n\nexport default UserAuth","import styles from \"./AuthPages.module.css\"\nimport Input from \"../../components/Input/Input\";\nimport {useState} from \"react\";\nimport {Person, Security, LockOpen} from \"@material-ui/icons\";\nimport Button from \"../../components/Button/Button\";\nimport {NavLink, useHistory} from \"react-router-dom\";\nimport {postLoginData} from \"../../api/AuthApi\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setUserType} from \"../../redux/actions\";\n\nconst AdminAuth = () => {\n    const history = useHistory();\n\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const login = () => {\n\n        const getAuthTokenDto = async () => {\n            try {\n                const authTokenDto = await postLoginData(username, password)\n                sessionStorage.setItem(\"JWT\", authTokenDto.bearer)\n                sessionStorage.setItem(\"user\", \"Admin\");\n                history.push(\"/admin/employers\");\n            }catch (exception){\n\n            }\n        }\n        getAuthTokenDto()\n    }\n\n    return(\n        <div className={styles.AuthPages}>\n            <div className={styles.NavLinks}>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/auth/admin'>\n                    Admin Panel\n                </NavLink>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/auth/user'>\n                    Dashboard\n                </NavLink>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/auth/registration'>\n                    Rejestracja\n                </NavLink>\n            </div>\n            <Input placeholder=\"Nazwa użytkownika\" icon={<Person/>} inputState={username} setInputState={setUsername}/>\n            <Input type=\"password\" placeholder=\"Hasło\" icon={<Security/>} inputState={password} setInputState={setPassword}/>\n            <div className={styles.Submit}>\n                <Button icon={<LockOpen fontSize='small'/>} text='Zaloguj' onClick={()=>login()}/>\n            </div>\n        </div>\n    )\n}\n\nexport default AdminAuth","const getEmployers = async (stringToken, notExpired=true) => {\n    const response = await fetch('http://localhost:8080/api/employers?notExpired='+notExpired, {\n        method: 'GET',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer '+stringToken\n        }\n    }).then((response)=>{\n        if(response.ok){\n            return response.json()\n        } else{\n            throw \"Forbidden\"\n        }\n    })\n    let data = []\n    response.map((employer)=>(\n        data.push({\n            id: employer.id,\n            username: employer.username,\n            name: employer.name,\n            lastName: employer.lastName,\n            age: employer.age,\n            pessel: employer.pessel,\n            position: employer.position,\n            street: employer.street,\n            cityCode: employer.cityCode,\n            city: employer.city,\n            phone: employer.phone,\n            salary: employer.salary\n        })\n    ))\n    console.log(response)\n    console.log(data)\n    return data\n}\n\nconst postEmployer = async (register, stringToken) => {\n    const employerDto = {\n        username: register.username,\n        name: register.name,\n        lastName: register.lastName,\n        age: register.age,\n        pessel: register.pessel,\n        street: register.street,\n        cityCode: register.cityCode,\n        city: register.city,\n        phone: register.phone,\n        position: register.position,\n        salary: register.salary,\n        password: register.password,\n        role: register.role\n    }\n    const employer = await fetch('http://localhost:8080/api/employers', {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer '+stringToken\n        },\n        body: JSON.stringify(employerDto)\n    }).then((response)=>{\n        if(response.status === 200){\n            return response.json()\n        } else if(response.status === 403){\n            throw \"Forbidden\"\n        } else{\n            throw \"BadRequest\"\n        }\n    })\n    return {\n        id: employer.id,\n        username: employer.username,\n        name: employer.name,\n        lastName: employer.lastName,\n        age: employer.age,\n        pessel: employer.pessel,\n        position: employer.position,\n        street: employer.street,\n        cityCode: employer.cityCode,\n        city: employer.city,\n        phone: employer.phone,\n        salary: employer.salary\n    }\n}\n\nconst putExpiringEmployer = async (id, notExpired, stringToken) => {\n    const employerDto = {\n        id: id,\n        notExpired: notExpired\n    }\n    return await fetch('http://localhost:8080/api/employers', {\n        method: 'PUT',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer '+stringToken\n        },\n        body: JSON.stringify(employerDto)\n    }).then((response)=>{\n        if(response.status === 200){\n            return response.json()\n        } else if(response.status === 403){\n            throw \"Forbidden\"\n        } else{\n            throw \"BadRequest\"\n        }\n    })\n}\n\nconst deleteEmployer = async (id, stringToken) => {\n    return await fetch('http://localhost:8080/api/employers/'+id, {\n        method: 'DELETE',\n        headers: {\n            'Content-type': 'application/json',\n            'Authorization': 'Bearer '+stringToken\n        }\n    }).then((response)=>{\n        if(response.status === 200){\n            return response.json()\n        } else if(response.status === 403){\n            throw \"Forbidden\"\n        } else{\n            throw \"BadRequest\"\n        }\n    })\n}\n\nexport {\n    getEmployers,\n    postEmployer,\n    putExpiringEmployer\n}\n","import Input from \"../../components/Input/Input\";\nimport {ArrowBack, ArrowForward, LockOpen, Person, Security} from \"@material-ui/icons\";\nimport styles from \"./AuthPages.module.css\";\nimport Button from \"../../components/Button/Button\";\nimport {useEffect, useState} from \"react\";\nimport {postRegistrationData} from \"../../api/AuthApi\";\nimport {useHistory} from \"react-router-dom\";\nimport {postEmployer} from \"../../api/EmployersApi\";\nimport {\n    clearAllRegister,\n    setRegisterAge,\n    setRegisterCity,\n    setRegisterCityCode,\n    setRegisterCompanyName,\n    setRegisterLastName,\n    setRegisterName,\n    setRegisterPassword,\n    setRegisterPasswordRepeat,\n    setRegisterPessel,\n    setRegisterPhone,\n    setRegisterPosition,\n    setRegisterRole,\n    setRegisterSalary,\n    setRegisterStep,\n    setRegisterStreet,\n    setRegisterUsername,\n    setRegisterValidation\n} from \"../../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst UserBasics = ({type}) => {\n    const register = useSelector(state => state.register)\n    const dispatch = useDispatch();\n    return(\n        <div className={styles.Inputs}>\n            <Input placeholder=\"Nazwa użytkownika\" icon={<Person/>} inputState={register.username} setInputState={(username)=>dispatch(setRegisterUsername(username))}/>\n            <Input type=\"password\" placeholder=\"Hasło\" icon={<Security/>} inputState={register.password} setInputState={(password)=>dispatch(setRegisterPassword(password))}/>\n            <Input type=\"password\" placeholder=\"Powtórz hasło\" icon={<Security/>} inputState={register.passwordRepeat} setInputState={(passwordRepeat)=>dispatch(setRegisterPasswordRepeat(passwordRepeat))}/>\n            <div className={type === 'create' ? styles.SubmitCreate : styles.SubmitAdd}>\n                <Button icon={<ArrowForward fontSize='small'/>} text='Krok 2' onClick={()=>{register.password===register.passwordRepeat ? dispatch(setRegisterStep(2)) : alert('Nieprawidłowo powtórzone hadło')}}/>\n            </div>\n        </div>\n    )\n}\n\nconst UserDetails = ({type}) => {\n    const register = useSelector(state => state.register)\n    const dispatch = useDispatch();\n    return(\n        <div className={styles.Inputs}>\n            <Input placeholder=\"Imię\" icon={<Person/>} inputState={register.name} setInputState={(name)=>dispatch(setRegisterName(name))}/>\n            <Input placeholder=\"Nazwisko\" icon={<Person/>} inputState={register.lastName} setInputState={(lastName)=>dispatch(setRegisterLastName(lastName))}/>\n            <Input placeholder=\"Wiek\" icon={<Person/>} inputState={register.age} setInputState={(age)=>dispatch(setRegisterAge(age))}/>\n            <Input placeholder=\"Pesel\" icon={<Person/>} inputState={register.pessel} setInputState={(pessel)=>dispatch(setRegisterPessel(pessel))}/>\n            <div className={type === 'create' ? styles.SubmitCreate : styles.SubmitAdd}>\n                <Button icon={<ArrowBack fontSize='small'/>} text='Krok 1' onClick={()=>dispatch(setRegisterStep(1))}/>\n                <Button icon={<ArrowForward fontSize='small'/>} text='Krok 3' onClick={()=>dispatch(setRegisterStep(3))}/>\n            </div>\n        </div>\n    )\n}\n\nconst UserContact = ({type}) => {\n    const register = useSelector(state => state.register)\n    const dispatch = useDispatch();\n    return(\n        <div className={styles.Inputs}>\n            <Input placeholder=\"Ulica\" icon={<Person/>} inputState={register.street} setInputState={(street)=>dispatch(setRegisterStreet(street))}/>\n            <Input placeholder=\"Miejscowość\" icon={<Person/>} inputState={register.city} setInputState={(city)=>dispatch(setRegisterCity(city))}/>\n            <Input placeholder=\"Kod pocztowy\" icon={<Person/>} inputState={register.cityCode} setInputState={(cityCode)=>dispatch(setRegisterCityCode(cityCode))}/>\n            <Input placeholder=\"Telefon\" icon={<Person/>} inputState={register.phone} setInputState={(phone)=>dispatch(setRegisterPhone(phone))}/>\n            <div className={type === 'create' ? styles.SubmitCreate : styles.SubmitAdd}>\n                <Button icon={<ArrowBack fontSize='small'/>} text='Krok 2' onClick={()=>dispatch(setRegisterStep(2))}/>\n                <Button icon={<ArrowForward fontSize='small'/>} text='Krok 4' onClick={()=>dispatch(setRegisterStep(4))}/>\n            </div>\n        </div>\n    )\n}\n\nconst CompanyGenerator = ({type, summit}) => {\n    const register = useSelector(state => state.register)\n    const dispatch = useDispatch();\n    return(\n        <div className={styles.Inputs}>\n            <Input placeholder=\"Nazwa firmy\" icon={<Person/>} inputState={register.companyName} setInputState={(companyName)=>dispatch(setRegisterCompanyName(companyName))}/>\n            <Input placeholder=\"Pozycja(prezes, kierownik, etc.)\" icon={<Person/>} inputState={register.position} setInputState={(position)=>dispatch(setRegisterPosition(position))}/>\n            <Input placeholder=\"Wynagrodzenie\" icon={<Person/>} inputState={register.salary} setInputState={(salary)=>dispatch(setRegisterSalary(salary))}/>\n            <div className={type === 'create' ? styles.SubmitCreate : styles.SubmitAdd}>\n                <Button icon={<ArrowBack fontSize='small'/>} text='Krok 3' onClick={()=>dispatch(setRegisterStep(3))}/>\n                <Button icon={<LockOpen fontSize='small'/>} text='Zarejestruj' onClick={()=>{summit()}}/>\n            </div>\n        </div>\n    )\n}\n\nconst CompanyAdder = ({type}) => {\n    const register = useSelector(state => state.register)\n    const dispatch = useDispatch();\n    return(\n        <div className={styles.Inputs}>\n            <Input placeholder=\"Rola(Admin/User)\" icon={<Person/>} inputState={register.role} setInputState={(role)=>dispatch(setRegisterRole(role))}/>\n            <Input placeholder=\"Pozycja(prezes, kierownik, etc.)\" icon={<Person/>} inputState={register.position} setInputState={(position)=>dispatch(setRegisterPosition(position))}/>\n            <Input placeholder=\"Wynagrodzenie\" icon={<Person/>} inputState={register.salary} setInputState={(salary)=>dispatch(setRegisterSalary(salary))}/>\n            <div className={type === 'create' ? styles.SubmitCreate : styles.SubmitAdd}>\n                <Button icon={<ArrowBack fontSize='small'/>} text='Krok 3' onClick={()=>dispatch(setRegisterStep(3))}/>\n            </div>\n        </div>\n    )\n}\n\nconst RegistrationPanel = ({type='create'}) => {\n\n    const register = useSelector(state => state.register)\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const cleaning = () => {\n        clearAllRegister()\n    }\n\n    const registration = () => {\n        const registrationAsync = async () => {\n            try {\n                if(register.password === register.passwordRepeat){\n                    if(type==='create'){\n                        await postRegistrationData(register)\n                        alert(\"Firma \"+register.companyName+\" została zarejestrowania.\")\n                        history.push(\"/admin/employers\");\n                        dispatch(clearAllRegister())\n                    } else {\n                        alert(\"Rejestracja...\")\n                        const employer = await postEmployer(register.username, register.name, register.lastName, register.age, register.pessel, register.street, register.cityCode, register.city, register.phone, register.position, register.salary, register.password, register.role, sessionStorage.getItem(\"JWT\"))\n                        //setEmployersData([...employersData, employer])\n                        alert(\"Dodano nowego użytkownika.\")\n                    }\n                }\n            }catch (exception){\n\n            }\n        }\n        registrationAsync()\n    }\n\n    const summit = () => {\n        if(register.validation === false)\n            alert(\"Wszystkie pola są obowiązkowe\")\n        else\n            registration()\n    }\n\n    useEffect(()=>{\n        //setCleaningCallback(()=>cleaning)\n        //setSummitCallback(()=>summit)\n        if(register.username === \"\" || register.password === \"\" ||\n            register.name === \"\" || register.lastName === \"\" || register.age === \"\" || register.pessel === \"\" ||\n            register.street === \"\" || register.city === \"\" || register.cityCode === \"\" || register.phone === \"\" ||\n            (type === 'create' && register.companyName === \"\") || (type !== 'create' && register.role === \"\") || register.position === \"\" || register.salary === \"\"){\n            dispatch(setRegisterValidation(false))\n        } else {\n            dispatch(setRegisterValidation(true))\n        }\n    },[register.username, register.password, register.passwordRepeat, register.name, register.lastName, register.age, register.pessel, register.street, register.city, register.cityCode, register.phone, register.companyName, register.role, register.position, register.salary, register.validation])\n\n    if(register.step===1)\n        return (<UserBasics type={type}/>)\n    else if(register.step===2)\n        return (<UserDetails type={type}/>)\n    else if(register.step===3)\n        return (<UserContact type={type}/>)\n    else\n        return type === 'create' ?\n            (<CompanyGenerator summit={summit} type={type}/>) :\n            (<CompanyAdder summit={summit} type={type}/>)\n}\n\nexport default RegistrationPanel","import styles from \"./AuthPages.module.css\"\nimport {NavLink, useHistory} from \"react-router-dom\";\nimport RegistrationPanel from \"./RegistrationPanel\";\n\nconst Registration = () => {\n    return(\n        <div className={styles.AuthPages}>\n            <div className={styles.NavLinks}>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/auth/admin'>\n                    Admin Panel\n                </NavLink>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/auth/user'>\n                    Dashboard\n                </NavLink>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/auth/registration'>\n                    Rejestracja\n                </NavLink>\n            </div>\n            <RegistrationPanel/>\n        </div>\n    )\n}\n\nexport default Registration","import {useEffect} from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Redirect = ({to}) => {\n\n    const history = useHistory();\n\n    useEffect(()=>{\n        history.push(to)\n    })\n\n    return(\n        <></>\n    )\n}\n\nexport default Redirect","import styles from './AuthPage.module.css'\nimport {Route} from \"react-router-dom\";\nimport UserAuth from \"../../pages/AuthPages/UserAuth\";\nimport AdminAuth from \"../../pages/AuthPages/AdminAuth\";\nimport Registration from \"../../pages/AuthPages/Registration\";\nimport {Business} from \"@material-ui/icons\";\nimport logo from \"../../logo.svg\"\nimport Redirect from \"../Redirect/Redirect\";\n\nconst AuthPage = () => {\n    return(\n        <div className={styles.AuthPage}>\n            <div className={styles.AuthorizationAdd}>\n                <div className={styles.Logo}>\n                    <Business className={styles.LogoIcon}/>\n                    <p>Planning System</p>\n                </div>\n                <img src={logo} alt='Planning System'/>\n                <h2>System IT dla planowania oraz kontroli pracy przedsiębiorstwa</h2>\n            </div>\n            <div>\n                <Route path='/auth' exact render={()=>(<Redirect to='/auth/admin'/>)}/>\n                <Route path='/auth/user' component={UserAuth}/>\n                <Route path='/auth/admin' component={AdminAuth}/>\n                <Route path='/auth/registration' component={Registration}/>\n            </div>\n        </div>\n    )\n}\n\nexport default AuthPage","import styles from './Menu.module.css'\nimport {\n    Person,\n    People,\n    Assignment,\n    Build,\n    Layers,\n    ShoppingCart,\n    AttachMoney,\n    Assessment,\n    Description,\n    PowerSettingsNew\n} from '@material-ui/icons';\nimport {NavLink} from 'react-router-dom'\nimport {useSelector} from \"react-redux\";\n\nconst Option = ({icon, text}) => {\n    return(\n        <div className={styles.Option}>\n            {icon}\n            <p>{text}</p>\n        </div>\n    )\n}\n\nconst AdminMenu = () => {\n    return(\n        <div className={styles.Menu}>\n            <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/admin/employers'>\n                <Option icon={<Person/>} text='Pracownicy'/>\n            </NavLink>\n            <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/admin/teams'>\n                <Option icon={<People/>} text='Zespoły'/>\n            </NavLink>\n            <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/admin/tasks'>\n                <Option icon={<Assignment/>} text='Zadania'/>\n            </NavLink>\n            <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/admin/tools'>\n                <Option icon={<Build/>} text='Narzędzia'/>\n            </NavLink>\n            <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/admin/materials'>\n                <Option icon={<Layers/>} text='Zasoby'/>\n            </NavLink>\n            <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/admin/logout'>\n                <Option icon={<PowerSettingsNew/>} text='Wyloguj'/>\n            </NavLink>\n            {/*<NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/admin/reports'>\n                    <Option icon={<Description/>} text='Raporty'/>\n                </NavLink>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/admin/products'>\n                    <Option icon={<ShoppingCart/>} text='Produkty'/>\n                </NavLink>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/admin/finance'>\n                    <Option icon={<AttachMoney/>} text='Finanse'/>\n                </NavLink>\n                <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/admin/analytics'>\n                    <Option icon={<Assessment/>} text='Zestawienia'/>\n                </NavLink>*/}\n        </div>\n    )\n}\n\nexport default AdminMenu","import styles from './Modal.module.css'\nimport Button from \"../Button/Button\";\n\nimport {Close, Add} from '@material-ui/icons';\nimport {useEffect, useState} from \"react\";\nimport modalStyles from \"./Modal.module.css\";\n\nexport const openDialog = (id='modal') =>{\n    const modal = document.getElementById(id)\n    modal.classList.add(modalStyles.ModalVisible)\n}\n\nconst Modal = ({title, inputs=[], id='modal', onClick, onCleaning=()=>{}, validate, setValidate}) => {\n\n    const closeDialog = (id) => {\n        onCleaning()\n        const modal = document.getElementById(id)\n        modal.classList.remove(styles.ModalVisible)\n        setValidate(false)\n    }\n\n    const add = (id) => {\n        onClick()\n        if(validate)\n            closeDialog(id)\n    }\n\n    return(\n        <div className={styles.Modal} id={id}>\n            <div className={styles.ModalContainer}>\n                <h2>{title}</h2>\n                <div className={styles.Inputs}>\n                    {inputs.map((input, index)=>(\n                        <div key={index}>\n                            {input}\n                        </div>\n                    ))}\n                </div>\n                <div className={styles.Buttons}>\n\n                </div>\n                <div className={styles.Buttons}>\n                    <Button icon={<Close fontSize='small'/>} text='Anuluj' onClick={()=>closeDialog(id)}/>\n                    <Button icon={<Add fontSize='small'/>} text='Dodaj' onClick={()=>add(id)}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal","import Input from \"../../../components/Input/Input\";\nimport {LocationCity, People, Person} from \"@material-ui/icons\";\nimport {del, get, post, put} from \"../../../api/RestApi\";\n\nexport const getTeamModalInputs = (addTeam, setName, setCity, setUsername) => {\n    return [\n        <Input background='white' placeholder='Nazwa teamu' icon={<People/>} inputState={addTeam.name} setInputState={setName}/>,\n        <Input background='white' placeholder='Miejscowość' icon={<LocationCity/>} inputState={addTeam.city} setInputState={setCity}/>,\n        <Input background='white' placeholder='Brygadzista(nazwa użytkownika)' icon={<Person/>} inputState={addTeam.username} setInputState={setUsername}/>\n    ]\n}\n\nexport const saveTeam = (addTeam, data, setData) => {\n    const postMethod = async () => {\n        try {\n            const dto = {\n                name: addTeam.name,\n                place: addTeam.city,\n                leader: {\n                    username: addTeam.username\n                }\n            }\n            const team = await post('http://localhost:8080/api/teams', dto, sessionStorage.getItem(\"JWT\"))\n            setData([...data, team])\n        }catch (exception){}\n    }\n    if(addTeam.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        postMethod()\n}\n\nexport const getTeamEmployers = (id, state, setState) => {\n    const getMethod = async () => {\n        try{\n            const employers = await get('http://localhost:8080/api/employers?teamId='+id, sessionStorage.getItem(\"JWT\"))\n            console.log(employers)\n            setState(employers)\n        } catch (exception){}\n    }\n    getMethod()\n    console.log(state)\n}\n\nexport const getEmployerByUsername = (username, setEmployerId) => {\n    const getMethod = async () => {\n        try {\n            console.log(\"T1\")\n            const employer = await get('http://localhost:8080/api/employers/'+username, sessionStorage.getItem(\"JWT\"))\n            console.log(\"T2\")\n            console.log(employer)\n            setEmployerId(employer.id)\n        } catch (exception){}\n    }\n    getMethod()\n}\n\nexport const addEmployerToTeam = (addTeamEmployer, teamId, setTeamId, username, state, setState) => {\n    const putMethod = async () => {\n        try{\n            const employer = await get('http://localhost:8080/api/employers/'+username, sessionStorage.getItem(\"JWT\"))\n            const dto = {\n                id: employer.id,\n                team: {\n                    id: setTeamId !== null ? setTeamId : -1\n                }\n            }\n            await put('http://localhost:8080/api/employers', dto, sessionStorage.getItem(\"JWT\"))\n            const employers = await get('http://localhost:8080/api/employers?teamId='+teamId, sessionStorage.getItem(\"JWT\"))\n            setState(employers)\n        } catch (exception){}\n    }\n    if(setTeamId != null && addTeamEmployer.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        putMethod()\n}\n\nexport const deleteEmployer = (id, data, setData) => {\n    const deleteEmployerAsync = async () => {\n        try {\n            await del('http://localhost:8080/api/teams/'+id, sessionStorage.getItem('JWT'))\n            setData(data.filter((team) => team.id !== id))\n        }catch (exception){\n\n        }\n    }\n    deleteEmployerAsync()\n}","import styles from './Text.module.css'\n\nconst Text = ({content, variant='classic'}) => {\n\n    function getVariant(variant){\n        if(variant === 'classic')\n            return styles.Classic;\n        if(variant === 'bold')\n            return styles.Bold;\n        if(variant === 'special')\n            return styles.Special;\n    }\n\n    return(\n        <div className={getVariant(variant)}>{content}</div>\n    )\n}\n\nexport default Text","import styles from './DoubleLineText.module.css'\n\nconst DoubleLineText = ({firstLine, secondLine}) => {\n    return(\n        <div className={styles.DoubleLineText}>\n            <div className={styles.FirstLine}>{firstLine}</div>\n            <div className={styles.SecondLine}>{secondLine}</div>\n        </div>\n    )\n}\n\nexport default DoubleLineText","import styles from './List.module.css'\n\nconst List = ({labels, sizing, data, template, onClick=(nr)=>{}, active, cursor='auto'}) => {\n\n    const gridLayout = {\n        display: 'grid',\n        alignContent: \"start\",\n        gridTemplateColumns: sizing,\n        gap: \"25px\",\n        cursor: cursor\n    }\n\n    return(\n        <div className={styles.List}>\n            <div style={gridLayout} className={styles.Labels}>\n                {labels.map((label, index)=>(\n                    <div key={index}>\n                        <p>{label}</p>\n                    </div>\n                ))}\n            </div>\n            {data.map((rowData, index)=>(\n                <div key={index} style={gridLayout} className={active===index ? styles.ActiveRow : styles.Row} onClick={()=>onClick(index)}>\n                    {template(index+1, rowData)}\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default List","import {useHistory, useParams} from \"react-router-dom\";\nimport {del, get} from \"../../../api/RestApi\";\nimport Text from \"../../../components/Text/Text\";\nimport DoubleLineText from \"../../../components/DoubleLineText/DoubleLineText\";\nimport Button from \"../../../components/Button/Button\";\nimport {Add, DeleteForever, People} from \"@material-ui/icons\";\nimport {useEffect, useState} from \"react\";\nimport List from \"../../../components/List/List\";\nimport {addEmployerToTeam, deleteEmployer, getTeamEmployers, getTeamModalInputs, saveTeam} from \"./Methods\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    clearAllTeam, setTeamCity,\n    setTeamEmployerId, setTeamEmployerNr,\n    setTeamEmployers,\n    setTeamEmployerTeamId,\n    setTeamEmployerUsername, setTeamEmployerValidation, setTeamName, setTeamUsername, setTeamValidation\n} from \"../../../redux/actions\";\nimport Modal, {openDialog} from \"../../../components/Modal/Modal\";\nimport Input from \"../../../components/Input/Input\";\n\nexport const TeamsList = ({data, setData}) => {\n    const teamEmployers = useSelector(state => state.teamEmployers)\n    const addTeam = useSelector(state => state.addTeam)\n    const addTeamEmployer = useSelector(state => state.addTeamEmployer)\n    const dispatch = useDispatch();\n    const labels = ['Nazwa', 'Placówka', 'Brygadzista', 'Kontakt']\n    const sizing = '1fr 1fr 1fr 1fr'\n    const deleteMethod = (id) => deleteEmployer(id, data, setData)\n    const template = (nr, rowData) => {\n        return [\n            <Text content={rowData.name}/>,\n            <Text content={rowData.place}/>,\n            <Text content={rowData.leader.name + rowData.leader.lastName}/>,\n            <Text content={rowData.leader.phone}/>,\n        ]\n    }\n    const getTeamEmployerList = (nr) => {\n        dispatch(setTeamEmployerNr(nr))\n        getTeamEmployers(data[nr].id, teamEmployers, (employers)=>dispatch(setTeamEmployers(employers)))\n        dispatch(setTeamEmployerTeamId(data[nr].id))\n    }\n\n    useEffect(()=>{\n        if(data.length > 0)\n            getTeamEmployerList(0)\n    }, [data])\n\n    const modalInputs = getTeamModalInputs(addTeam, (name)=>dispatch(setTeamName(name)), (city)=>dispatch(setTeamCity(city)), (username)=>dispatch(setTeamUsername(username)))\n    const modalOnClick = () => saveTeam(addTeam, data, setData)\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={data}/>\n            <Modal title='Dodaj Team' inputs={modalInputs} onClick={modalOnClick} onCleaning={()=>dispatch(clearAllTeam())} validate={addTeam.validation} setValidate={(validation)=>dispatch(setTeamValidation(validation))}/>\n        </>\n\n    )\n}\n\nexport const TeamEmployersList = () => {\n    const addTeamEmployer = useSelector(state => state.addTeamEmployer)\n    const dispatch = useDispatch();\n    const teamEmployers = useSelector(state => state.teamEmployers)\n    const history = useHistory();\n    const labels = ['Nr', 'Imię i Nazwisko', 'Wiek', 'Stanowisko']\n    const sizing = '0.2fr 1fr 1fr 1fr'\n    const deleteMethod = (username) => {\n        //addTeamEmployer.username\n        //dispatch(setTeamEmployerUsername(username))\n        addEmployerToTeam(addTeamEmployer, addTeamEmployer.teamId, null, username, teamEmployers, (employers)=>dispatch(setTeamEmployers(employers)))\n    }\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.name + ' ' + rowData.lastName}/>,\n            <Text content={rowData.age + ' lat'}/>,\n            <Text content={rowData.position}/>,\n        ]\n    }\n    const modal2Inputs = [<Input background='white' placeholder='Nazwa użytkownika' icon={<People/>} inputState={addTeamEmployer.username} setInputState={(username)=>dispatch(setTeamEmployerUsername(username))}/>]\n    const modal2OnClick = () => {\n        addEmployerToTeam(addTeamEmployer, addTeamEmployer.teamId, addTeamEmployer.teamId, addTeamEmployer.username, teamEmployers, (employers)=>dispatch(setTeamEmployers(employers)))\n        //getTeamEmployers(addTeamEmployer.teamId, teamEmployers, (employers)=>dispatch(setTeamEmployers(employers)))\n    }\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={teamEmployers}/>\n            <Modal title='Dodaj Użytkownika' inputs={modal2Inputs} onClick={modal2OnClick} onCleaning={()=>dispatch(setTeamEmployerUsername(''))} validate={addTeamEmployer.validation} setValidate={(validation)=>dispatch(setTeamEmployerValidation(validation))} id='modal2'/>\n        </>\n    )\n}","import styles from '../MenuPages.module.css'\nimport {Add, People} from \"@material-ui/icons\";\nimport Button from \"../../../components/Button/Button\";\nimport {useEffect, useState} from \"react\";\nimport Modal, {openDialog} from \"../../../components/Modal/Modal\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    clearAllTeam,\n    setTeamCity, setTeamEmployerId, setTeamEmployerTeamId,\n    setTeamEmployerUsername, setTeamEmployerValidation,\n    setTeamName,\n    setTeamUsername,\n    setTeamValidation\n} from \"../../../redux/actions\";\nimport {addEmployerToTeam, addTeam, getEmployerByUsername, getTeamModalInputs} from \"./Methods\";\nimport {TeamEmployersList, TeamsList} from \"./List\";\nimport {Route, useHistory} from \"react-router-dom\";\nimport Input from \"../../../components/Input/Input\";\n\nconst Teams = ({data, setData}) => {\n    const history = useHistory();\n    const addTeam = useSelector(state => state.addTeam)\n    const addTeamEmployer = useSelector(state => state.addTeamEmployer)\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        if(addTeam.name === '' || addTeam.city === '' || addTeam.username === '')\n            dispatch(setTeamValidation(false))\n        else\n            dispatch(setTeamValidation(true))\n        if(addTeamEmployer.username === '')\n            dispatch(setTeamEmployerValidation(false))\n        else\n            dispatch(setTeamEmployerValidation(true))\n        //getEmployerByUsername(addTeamEmployer.username, (id)=>dispatch(setTeamEmployerId(id)))\n    }, [addTeam.name, addTeam.city, addTeam.username, addTeamEmployer.username])\n\n    return(\n        <div className={styles.MenuPages}>\n            <div>\n                <p className={styles.Header}>Twój zespół</p>\n                <TeamsList data={data} setData={setData}/>\n            </div>\n            <div>\n                {addTeamEmployer.teamId !== -1 ?\n                    <>\n                        <p className={styles.Header}>Członkowie zespołu</p>\n                        {/*<Route path={'/admin/teams/:teamId'} render={()=>(<TeamEmployersList/>)}/>*/}\n                        <TeamEmployersList/>\n                    </> :\n                    <p className={styles.Header}></p>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Teams","import Input from \"../../../components/Input/Input\";\nimport {Search} from \"@material-ui/icons\";\nimport {post, get, del, put} from \"../../../api/RestApi\";\n\nexport const getTaskModalInputs = (addTask, setName, setTeamName) => {\n    return [\n        <Input background='white' placeholder='Nazwa' icon={<Search/>} inputState={addTask.name} setInputState={setName}/>,\n        <Input background='white' placeholder='Nawa teamu' icon={<Search/>} inputState={addTask.teamName} setInputState={setTeamName}/>\n    ]\n}\n\nexport const saveTask = (addTask, data, setData) => {\n    const postMethod = async () => {\n        try {\n            const dto = {\n                name: addTask.name,\n                team: {\n                    name: addTask.teamName\n                },\n                status: 0,\n                notExpired: true\n            }\n            const task = await post('http://localhost:8080/api/tasks', dto, sessionStorage.getItem(\"JWT\"))\n            setData([...data, task])\n        }catch (exception){}\n    }\n    if(addTask.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        postMethod()\n}\n\nexport const getTaskTools = (id, state, setState) => {\n    const getMethod = async () => {\n        try{\n            const tools = await get('http://localhost:8080/api/tools?taskId='+id, sessionStorage.getItem(\"JWT\"))\n            console.log(tools)\n            setState(tools)\n        } catch (exception){}\n    }\n    getMethod()\n    console.log(state)\n}\n\nexport const addToolToTask = (addToolTask, taskId, setToolId, name, state, setState) => {\n    const putMethod = async () => {\n        try{\n            const tool = await get('http://localhost:8080/api/tools/'+name, sessionStorage.getItem(\"JWT\"))\n            const dto = {\n                id: tool.id,\n                task: {\n                    id: setToolId !== null ? setToolId : -1\n                }\n            }\n            await put('http://localhost:8080/api/tools', dto, sessionStorage.getItem(\"JWT\"))\n            const tools = await get('http://localhost:8080/api/tools?taskId='+taskId, sessionStorage.getItem(\"JWT\"))\n            setState(tools)\n        } catch (exception){}\n    }\n    if(setToolId != null && addToolTask.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        putMethod()\n}\n\n\nexport const getTaskMaterials = (id, state, setState) => {\n    const getMethod = async () => {\n        try{\n            const materials = await get('http://localhost:8080/api/materials?taskId='+id, sessionStorage.getItem(\"JWT\"))\n            console.log(materials)\n            setState(materials)\n        } catch (exception){}\n    }\n    getMethod()\n    console.log(state)\n}\n\nexport const addMaterialToTask = (addMaterialTask, taskId, setMaterialId, name, state, setState) => {\n    const putMethod = async () => {\n        try{\n            const material = await get('http://localhost:8080/api/materials/'+name, sessionStorage.getItem(\"JWT\"))\n            const dto = {\n                id: material.id,\n                task: {\n                    id: setMaterialId !== null ? setMaterialId : -1\n                }\n            }\n            console.log(setMaterialId)\n            console.log(dto)\n            await put('http://localhost:8080/api/materials', dto, sessionStorage.getItem(\"JWT\"))\n            const materials = await get('http://localhost:8080/api/materials?taskId='+taskId, sessionStorage.getItem(\"JWT\"))\n            setState(materials)\n        } catch (exception){}\n    }\n    if(setMaterialId != null && addMaterialTask.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        putMethod()\n}\n\n\nexport const deleteTask = (id, data, setData) => {\n    const deleteTaskAsync = async () => {\n        try {\n            await del('http://localhost:8080/api/tasks/'+id, sessionStorage.getItem('JWT'))\n            setData(data.filter((team) => team.id !== id))\n        }catch (exception){\n\n        }\n    }\n    deleteTaskAsync()\n}\n\nconst delMaterial = async (id) => {\n    await del('http://localhost:8080/api/materials/'+id, sessionStorage.getItem('JWT'))\n}\n\nconst delMaterials = async (id) => {\n    const materials = await get('http://localhost:8080/api/materials?taskId='+id, sessionStorage.getItem(\"JWT\"))\n    //console.log(materials)\n    materials.forEach((material)=>{\n        //console.log(material.name)\n        delMaterial(material.id)\n    })\n}\n\nconst uncheckTool = async (tool) => {\n    const dto = {\n        id: tool.id,\n        task: {\n            id: -1\n        }\n    }\n    await put('http://localhost:8080/api/tools/', dto, sessionStorage.getItem('JWT'))\n    //await del('http://localhost:8080/api/materials/'+id, sessionStorage.getItem('JWT'))\n}\n\nconst uncheckTools = async (id) => {\n    const tools = await get('http://localhost:8080/api/tools?taskId='+id, sessionStorage.getItem(\"JWT\"))\n    //console.log(tools)\n    tools.forEach((tool)=>{\n        //console.log(tool.name)\n        uncheckTool(tool)\n    })\n}\n\nconst delTask = async (id, data, setData) => {\n    await del('http://localhost:8080/api/tasks/'+id, sessionStorage.getItem('JWT'))\n    setData(data.filter((team) => team.id !== id))\n}\n\n/*export const unsetTool = async (id) => {\n    const dto = {\n\n    }\n    await put('http://localhost:8080/api/tools/'+id, dto, sessionStorage.getItem('JWT'))\n}*/\n\nexport const finishTask = (id, data, setData, clear) => {\n    const deleteTaskAsync = async () => {\n        try {\n            await delMaterials(id).then(()=>uncheckTools(id).then(()=>delTask(id, data, setData)))\n            clear()\n        }catch (exception){\n\n        }\n    }\n    deleteTaskAsync()\n}","import Text from \"../../../components/Text/Text\";\nimport DoubleLineText from \"../../../components/DoubleLineText/DoubleLineText\";\nimport Button from \"../../../components/Button/Button\";\nimport {Add, DeleteForever, ExpandMore, People} from \"@material-ui/icons\";\nimport List from \"../../../components/List/List\";\nimport {\n    addMaterialToTask,\n    addToolToTask,\n    deleteTask, finishTask, getTaskMaterials,\n    getTaskModalInputs, getTaskTools,\n    saveTask,\n} from \"./Methods\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    clearAllMaterial,\n    clearAllTask, clearAllTaskMaterial, clearAllTaskTool, clearAllTool,\n    setTaskMaterialMaterialId,\n    setTaskMaterialMaterialName,\n    setTaskMaterialNr,\n    setTaskMaterials, setTaskMaterialTaskId,\n    setTaskMaterialValidation,\n    setTaskName,\n    setTaskTeamName,\n    setTaskToolNr,\n    setTaskTools,\n    setTaskToolTaskId,\n    setTaskToolToolName,\n    setTaskToolValidation,\n    setTaskValidation,\n    setTeamEmployerNr,\n    setTeamEmployerTeamId,\n} from \"../../../redux/actions\";\nimport Modal, {openDialog} from \"../../../components/Modal/Modal\";\nimport Input from \"../../../components/Input/Input\";\n\nexport const TaskList = ({data, setData}) => {\n    const taskTools = useSelector(state => state.taskTools)\n    const taskMaterials = useSelector(state => state.taskMaterials)\n    const addTask = useSelector(state => state.addTask)\n    const addTaskTool = useSelector(state => state.addTaskTool)\n    const dispatch = useDispatch();\n\n    const labels = ['', 'Nazwa', 'Team/Brygadzista', '']\n    const sizing = '0.2fr 1.2fr 1.2fr 120px'\n    const deleteMethod = (id) => {\n        finishTask(id, data, setData, ()=>{\n            dispatch(setTaskTools([]))\n            dispatch(setTaskMaterials([]))\n        })\n        /*clearAllTaskTool()\n        clearAllTaskMaterial()\n        setTaskTools([])\n        setTaskMaterials([])*/\n    }\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.name}/>,\n            <DoubleLineText firstLine={rowData.team.name} secondLine={rowData.team.leader.name + ' ' + rowData.team.leader.lastName}/>,\n            <div className='Center'>\n                <Button icon={<DeleteForever fontSize='small'/>} text='Wykonaj' onClick={()=>deleteMethod(rowData.id)}/>\n            </div>\n        ]\n    }\n    const getTaskToolsList = (nr) => {\n        dispatch(setTaskToolNr(nr))\n        dispatch(setTaskMaterialNr(nr))\n        getTaskTools(data[nr].id, taskTools, (tools)=>dispatch(setTaskTools(tools)))\n        getTaskMaterials(data[nr].id, taskMaterials, (materials)=>dispatch(setTaskMaterials(materials)))\n        dispatch(setTaskToolTaskId(data[nr].id))\n        dispatch(setTaskMaterialTaskId(data[nr].id))\n    }\n    const modalInputs = getTaskModalInputs(addTask, (name)=>dispatch(setTaskName(name)), (teamName)=>dispatch(setTaskTeamName(teamName)))\n    const modalOnClick = () => saveTask(addTask, data, setData)\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={data} onClick={getTaskToolsList} active={addTaskTool.nr} cursor='pointer'/>\n            <Modal title='Dodaj Team' inputs={modalInputs} onClick={modalOnClick} onCleaning={()=>dispatch(clearAllTask())} validate={addTask.validation} setValidate={(validation)=>dispatch(setTaskValidation(validation))}/>\n        </>\n\n    )\n}\n\n\nexport const TaskToolsList = () => {\n    const addTaskTool = useSelector(state => state.addTaskTool)\n    const dispatch = useDispatch();\n    const taskTools = useSelector(state => state.taskTools)\n    const labels = ['Nr', 'Kategoria', 'Nazwa', 'Model', 'Nr seryjny']\n    const sizing = '0.2fr 1fr 1fr 1fr 1fr'\n    const deleteMethod = (toolName) => {\n        addToolToTask(addTaskTool, addTaskTool.taskId, null, toolName, taskTools, (tools)=>dispatch(setTaskTools(tools)))\n    }\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.category}/>,\n            <Text content={rowData.name}/>,\n            <Text content={rowData.model}/>,\n            <Text content={rowData.identityNo}/>,\n            /*<DoubleLineText firstLine={rowData.model} secondLine={rowData.identityNo}/>,\n            <Text content={rowData.buyDate}/>,\n            <DoubleLineText firstLine={rowData.price+' PLN'} secondLine={1.23*rowData.price+' PLN'}/>,*/\n        ]\n    }\n    const modal2Inputs = [<Input background='white' placeholder='Nazwa użytkownika' icon={<People/>} inputState={addTaskTool.toolName} setInputState={(toolName)=>dispatch(setTaskToolToolName(toolName))}/>]\n    const modal2OnClick = () => {\n        addToolToTask(addTaskTool, addTaskTool.taskId, addTaskTool.taskId, addTaskTool.toolName, taskTools, (tools)=>dispatch(setTaskTools(tools)))\n    }\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={taskTools}/>\n            <Modal title='Dodaj narzędzie' inputs={modal2Inputs} onClick={modal2OnClick} onCleaning={()=>dispatch(setTaskToolToolName(''))} validate={addTaskTool.validation} setValidate={(validation)=>dispatch(setTaskToolValidation(validation))} id='modal2'/>\n        </>\n    )\n}\n\nexport const TaskMaterialsList = () => {\n    const addTaskMaterial = useSelector(state => state.addTaskMaterial)\n    const dispatch = useDispatch();\n    const taskMaterials = useSelector(state => state.taskMaterials)\n    const labels = ['Nr', 'Kategoria', 'Nazwa', 'Dostawca', 'Ilość/miara']\n    const sizing = '0.2fr 1fr 1fr 1fr 1fr'\n    const deleteMethod = (toolName) => {\n        addMaterialToTask(addTaskMaterial, addTaskMaterial.taskId, null, toolName, taskMaterials, (materials)=>dispatch(setTaskMaterials(materials)))\n    }\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.category}/>,\n            <Text content={rowData.name}/>,\n            <Text content={rowData.supplier}/>,\n            <DoubleLineText firstLine={rowData.count+' szt.'} secondLine={rowData.measure}/>,\n        ]\n    }\n    const modal2Inputs = [<Input background='white' placeholder='Nazwa materiału' icon={<People/>} inputState={addTaskMaterial.materialName} setInputState={(materialName)=>dispatch(setTaskMaterialMaterialName(materialName))}/>]\n    const modal2OnClick = () => {\n        addMaterialToTask(addTaskMaterial, addTaskMaterial.taskId, addTaskMaterial.taskId, addTaskMaterial.materialName, taskMaterials, (materials)=>dispatch(setTaskMaterials(materials)))\n    }\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={taskMaterials}/>\n            <Modal title='Dodaj narzędzie' inputs={modal2Inputs} onClick={modal2OnClick} onCleaning={()=>dispatch(setTaskMaterialMaterialName(''))} validate={addTaskMaterial.validation} setValidate={(validation)=>dispatch(setTaskMaterialValidation(validation))} id='modal3'/>\n        </>\n    )\n}\n","import styles from '../MenuPages.module.css'\nimport List from \"../../../components/List/List\";\nimport Text from \"../../../components/Text/Text\";\nimport DoubleLineText from \"../../../components/DoubleLineText/DoubleLineText\";\nimport {ExpandMore} from \"@material-ui/icons\";\nimport {TaskList, TaskMaterialsList, TaskToolsList} from \"./List\";\nimport {TeamEmployersList, TeamsList} from \"../Team/List\";\nimport {useEffect} from \"react\";\nimport {\n    setTaskMaterialValidation,\n    setTaskToolValidation,\n    setTaskValidation,\n    setTeamEmployerValidation,\n    setTeamValidation\n} from \"../../../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Tasks = ({data, setData}) => {\n    const addTask = useSelector(state => state.addTask)\n    const addTaskTool = useSelector(state => state.addTaskTool)\n    const addTaskMaterial = useSelector(state => state.addTaskMaterial)\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        if(addTask.name === '' || addTask.teamName === '')\n            dispatch(setTaskValidation(false))\n        else\n            dispatch(setTaskValidation(true))\n        if(addTaskTool.toolName === '')\n            dispatch(setTaskToolValidation(false))\n        else\n            dispatch(setTaskToolValidation(true))\n        if(addTaskMaterial.materialName === '')\n            dispatch(setTaskMaterialValidation(false))\n        else\n            dispatch(setTaskMaterialValidation(true))\n    }, [addTask.name, addTask.teamName, addTaskTool.toolName, addTaskMaterial.materialName])\n    return(\n        <div className={styles.HorizontalSplit2}>\n            <div>\n                <p className={styles.Header}>Zadania</p>\n                {/*<List labels={labels} sizing={sizing} template={template} data={data}/>*/}\n                <TaskList data={data} setData={setData}/>\n            </div>\n            <div>\n                {addTaskTool.taskId !== -1 ?\n                    <>\n                        <p className={styles.Header}>Narzędzia</p>\n                        <TaskToolsList/>\n                        <p className={styles.Header}>Materiały</p>\n                        <TaskMaterialsList/>\n                    </> :\n                    <p className={styles.Header}>Wybierz zadanie, aby zarządzać jego zasobami</p>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Tasks","import Input from \"../../../components/Input/Input\";\nimport {LocationCity, People, Person} from \"@material-ui/icons\";\nimport {del, get, post, put} from \"../../../api/RestApi\";\n\nexport const getTeamModalInputs = (addTeam, setName, setCity, setUsername) => {\n    return [\n        <Input background='white' placeholder='Nazwa teamu' icon={<People/>} inputState={addTeam.name} setInputState={setName}/>,\n        <Input background='white' placeholder='Miejscowość' icon={<LocationCity/>} inputState={addTeam.city} setInputState={setCity}/>,\n        <Input background='white' placeholder='Brygadzista(nazwa użytkownika)' icon={<Person/>} inputState={addTeam.username} setInputState={setUsername}/>\n    ]\n}\n\nexport const saveTeam = (addTeam, data, setData) => {\n    const postMethod = async () => {\n        try {\n            const dto = {\n                name: addTeam.name,\n                place: addTeam.city,\n                leader: {\n                    username: addTeam.username\n                }\n            }\n            const team = await post('http://localhost:8080/api/teams', dto, sessionStorage.getItem(\"JWT\"))\n            setData([...data, team])\n        }catch (exception){}\n    }\n    if(addTeam.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        postMethod()\n}\n\nexport const getTeamEmployers = (id, state, setState) => {\n    const getMethod = async () => {\n        try{\n            const employers = await get('http://localhost:8080/api/employers?teamId='+id, sessionStorage.getItem(\"JWT\"))\n            console.log(employers)\n            setState(employers)\n        } catch (exception){}\n    }\n    getMethod()\n    console.log(state)\n}\n\nexport const getEmployerByUsername = (username, setEmployerId) => {\n    const getMethod = async () => {\n        try {\n            console.log(\"T1\")\n            const employer = await get('http://localhost:8080/api/employers/'+username, sessionStorage.getItem(\"JWT\"))\n            console.log(\"T2\")\n            console.log(employer)\n            setEmployerId(employer.id)\n        } catch (exception){}\n    }\n    getMethod()\n}\n\nexport const addEmployerToTeam = (addTeamEmployer, teamId, setTeamId, username, state, setState) => {\n    const putMethod = async () => {\n        try{\n            const employer = await get('http://localhost:8080/api/employers/'+username, sessionStorage.getItem(\"JWT\"))\n            const dto = {\n                id: employer.id,\n                team: {\n                    id: setTeamId !== null ? setTeamId : -1\n                }\n            }\n            await put('http://localhost:8080/api/employers', dto, sessionStorage.getItem(\"JWT\"))\n            const employers = await get('http://localhost:8080/api/employers?teamId='+teamId, sessionStorage.getItem(\"JWT\"))\n            setState(employers)\n        } catch (exception){\n            alert(\"Brak pracownika o wskazanej nazwie\")\n        }\n    }\n    if(setTeamId != null && addTeamEmployer.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        putMethod()\n}\n\nexport const deleteEmployer = (id, data, setData) => {\n    const deleteEmployerAsync = async () => {\n        try {\n            await del('http://localhost:8080/api/teams/'+id, sessionStorage.getItem('JWT'))\n            setData(data.filter((team) => team.id !== id))\n        }catch (exception){\n\n        }\n    }\n    deleteEmployerAsync()\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {del} from \"../../../api/RestApi\";\nimport Text from \"../../../components/Text/Text\";\nimport DoubleLineText from \"../../../components/DoubleLineText/DoubleLineText\";\nimport Button from \"../../../components/Button/Button\";\nimport {Add, DeleteForever} from \"@material-ui/icons\";\nimport {\n    clearAllTeam,\n    clearAllTool,\n    setTeamCity,\n    setTeamEmployerNr,\n    setTeamEmployers,\n    setTeamEmployerTeamId,\n    setTeamName,\n    setTeamUsername,\n    setTeamValidation,\n    setToolCategory,\n    setToolIdentityNo,\n    setToolModel,\n    setToolName,\n    setToolValidation\n} from \"../../../redux/actions\";\nimport {getTeamEmployers, getTeamModalInputs} from \"../Teams/Methods\";\nimport {useState} from \"react\";\nimport List from \"../../../components/List/List\";\nimport Modal, {openDialog} from \"../../../components/Modal/Modal\";\nimport {deleteTool, getToolModalInputs, saveTool} from \"./Methods\";\n\nexport const ToolsList = ({data, setData}) => {\n    const addTool= useSelector(state => state.addTool)\n    const dispatch = useDispatch();\n    const labels = ['Nr', 'Kategoria', 'Nazwa', 'Model', 'Nr seryjny', '']\n    const sizing = '0.2fr 1fr 1fr 1fr 1fr 120px'\n    const deleteMethod = (id) => deleteTool(id, data, setData)\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.category}/>,\n            <Text content={rowData.name}/>,\n            <Text content={rowData.model}/>,\n            <Text content={rowData.identityNo}/>,\n            /*<DoubleLineText firstLine={rowData.model} secondLine={rowData.identityNo}/>,\n            <Text content={rowData.buyDate}/>,\n            <DoubleLineText firstLine={rowData.price+' PLN'} secondLine={1.23*rowData.price+' PLN'}/>,*/\n            <div className='Center'>\n                <Button icon={<DeleteForever fontSize='small'/>} text='Usuń' onClick={()=>deleteMethod(rowData.id)}/>\n            </div>\n        ]\n    }\n\n    const modalInputs = getToolModalInputs(addTool, (category)=>dispatch(setToolCategory(category)), (name)=>dispatch(setToolName(name)), (model)=>dispatch(setToolModel(model)), (identityNo)=>dispatch(setToolIdentityNo(identityNo)))\n    const modalOnClick = () => saveTool(addTool, data, setData)\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={data} cursor='pointer'/>\n            <Modal title='Dodaj Team' inputs={modalInputs} onClick={modalOnClick} onCleaning={()=>dispatch(clearAllTool())} validate={addTool.validation} setValidate={(validation)=>dispatch(setToolValidation(validation))}/>\n            <div className='Right'>\n                <Button icon={<Add fontSize='small'/>} text='Dodaj' onClick={() => openDialog()}/>\n            </div>\n        </>\n\n    )\n}","import {del, post} from \"../../../api/RestApi\";\nimport Input from \"../../../components/Input/Input\";\nimport {Search} from \"@material-ui/icons\";\n\nexport const getToolModalInputs = (addTool, setCategory, setName, setModel, setIdentityNo) => {\n    return [\n        <Input background='white' placeholder='Kategoria' icon={<Search/>} inputState={addTool.category} setInputState={setCategory}/>,\n        <Input background='white' placeholder='Nazwa' icon={<Search/>} inputState={addTool.name} setInputState={setName}/>,\n        <Input background='white' placeholder='Model' icon={<Search/>} inputState={addTool.model} setInputState={setModel}/>,\n        <Input background='white' placeholder='Numer seryjny' icon={<Search/>} inputState={addTool.identityNo} setInputState={setIdentityNo}/>\n    ]\n}\n\nexport const saveTool = (addTool, data, setData) => {\n    const postMethod = async () => {\n        try {\n            const dto = {\n                category: addTool.category,\n                name: addTool.name,\n                model: addTool.model,\n                identityNo: addTool.identityNo,\n                notExpired: true\n            }\n            const tool = await post('http://localhost:8080/api/tools', dto, sessionStorage.getItem(\"JWT\"))\n            setData([...data, tool])\n        }catch (exception){}\n    }\n    if(addTool.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        postMethod()\n}\n\nexport const deleteTool = (id, data, setData) => {\n    const deleteToolAsync = async () => {\n        try {\n            await del('http://localhost:8080/api/tools/'+id, sessionStorage.getItem('JWT'))\n            setData(data.filter((team) => team.id !== id))\n        }catch (exception){\n\n        }\n    }\n    deleteToolAsync()\n}","import styles from '../MenuPages.module.css'\nimport List from \"../../../components/List/List\";\nimport Text from \"../../../components/Text/Text\";\nimport DoubleLineText from \"../../../components/DoubleLineText/DoubleLineText\";\nimport {ToolsList} from \"./List\";\nimport {useEffect} from \"react\";\nimport {setTeamEmployerValidation, setTeamValidation, setToolValidation} from \"../../../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Tools = ({data, setData}) => {\n    const addTool= useSelector(state => state.addTool)\n    const dispatch = useDispatch();\n    /*const labels = ['Nr', 'Kategoria', 'Nazwa', 'Model/Nr seryjny', 'Data zakupu', 'Cena netto/brutto']\n    const sizing = '0.2fr 1fr 1fr 1fr 1fr 1fr'\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.category}/>,\n            <Text content={rowData.name}/>,\n            <DoubleLineText firstLine={rowData.model} secondLine={rowData.identityNo}/>,\n            <Text content={rowData.buyDate}/>,\n            <DoubleLineText firstLine={rowData.price+' PLN'} secondLine={1.23*rowData.price+' PLN'}/>,\n        ]\n    }\n    const data = [{\n        category: 'Spawarki',\n        name: 'Spawarka migowa',\n        model: 'XFC-120-17-0-1KF',\n        identityNo: 'AKW-11-42-75-722-UL',\n        buyDate: '20.05.2015',\n        price: 1599\n    },{\n        category: 'Spawarki',\n        name: 'Spawarka',\n        model: 'XFC-120-17-0-1KF',\n        identityNo: 'AKW-11-42-75-722-UL',\n        buyDate: '20.05.2015',\n        price: 1599\n    }]*/\n    useEffect(()=>{\n        if(addTool.category === '' || addTool.name === '' || addTool.model === '' || addTool.identityNo === '')\n            dispatch(setToolValidation(false))\n        else\n            dispatch(setToolValidation(true))\n        //getEmployerByUsername(addTeamEmployer.username, (id)=>dispatch(setTeamEmployerId(id)))\n    }, [addTool.category, addTool.name, addTool.model, addTool.identityNo])\n\n    return(\n        <div className={styles.MenuPages}>\n            <ToolsList data={data} setData={setData}/>\n        </div>\n    )\n}\n\nexport default Tools","import {useDispatch, useSelector} from \"react-redux\";\nimport {del} from \"../../../api/RestApi\";\nimport Text from \"../../../components/Text/Text\";\nimport DoubleLineText from \"../../../components/DoubleLineText/DoubleLineText\";\nimport Button from \"../../../components/Button/Button\";\nimport {Add, DeleteForever} from \"@material-ui/icons\";\nimport {\n    clearAllMaterial,\n    clearAllTeam,\n    clearAllTool, setMaterialCategory, setMaterialCount, setMaterialMeasure, setMaterialName, setMaterialSupplier,\n    setTeamCity,\n    setTeamEmployerNr,\n    setTeamEmployers,\n    setTeamEmployerTeamId,\n    setTeamName,\n    setTeamUsername,\n    setTeamValidation,\n    setToolCategory,\n    setToolIdentityNo,\n    setToolModel,\n    setToolName,\n    setToolValidation\n} from \"../../../redux/actions\";\nimport {getTeamEmployers, getTeamModalInputs} from \"../Teams/Methods\";\nimport {useState} from \"react\";\nimport List from \"../../../components/List/List\";\nimport Modal, {openDialog} from \"../../../components/Modal/Modal\";\nimport {\n    deleteMaterial,\n    deleteTool,\n    getMaterialModalInputs,\n    getToolModalInputs,\n    saveMaterial,\n    saveTool\n} from \"./Methods\";\n\nexport const MaterialsList = ({data, setData}) => {\n    const addMaterial= useSelector(state => state.addMaterial)\n    const dispatch = useDispatch();\n    const labels = ['Nr', 'Kategoria', 'Nazwa', 'Dostawca', 'Ilość/miara', '']\n    const sizing = '0.2fr 1fr 1fr 1fr 0.6fr 120px'\n    const deleteMethod = (id) => deleteMaterial(id, data, setData)\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.category}/>,\n            <Text content={rowData.name}/>,\n            <Text content={rowData.supplier}/>,\n            <DoubleLineText firstLine={rowData.count+' szt.'} secondLine={rowData.measure}/>,\n            <div className='Center'>\n                <Button icon={<DeleteForever fontSize='small'/>} text='Usuń' onClick={()=>deleteMethod(rowData.id)}/>\n            </div>\n        ]\n    }\n\n    const modalInputs = getMaterialModalInputs(addMaterial, (category)=>dispatch(setMaterialCategory(category)), (name)=>dispatch(setMaterialName(name)), (supplier)=>dispatch(setMaterialSupplier(supplier)), (count)=>dispatch(setMaterialCount(count)), (measure)=>dispatch(setMaterialMeasure(measure)))\n    const modalOnClick = () => saveMaterial(addMaterial, data, setData)\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={data} cursor='pointer'/>\n            <Modal title='Dodaj Team' inputs={modalInputs} onClick={modalOnClick} onCleaning={()=>dispatch(clearAllMaterial())} validate={addMaterial.validation} setValidate={(validation)=>dispatch(setToolValidation(validation))}/>\n            <div className='Right'>\n                <Button icon={<Add fontSize='small'/>} text='Dodaj' onClick={() => openDialog()}/>\n            </div>\n        </>\n\n    )\n}","import {del, post} from \"../../../api/RestApi\";\nimport Input from \"../../../components/Input/Input\";\nimport {Search} from \"@material-ui/icons\";\n\nexport const getMaterialModalInputs = (addMaterial, setCategory, setName, setSupplier, setCount, setMeasure) => {\n    return [\n        <Input background='white' placeholder='Kategoria' icon={<Search/>} inputState={addMaterial.category} setInputState={setCategory}/>,\n        <Input background='white' placeholder='Nazwa' icon={<Search/>} inputState={addMaterial.name} setInputState={setName}/>,\n        <Input background='white' placeholder='Dostawca' icon={<Search/>} inputState={addMaterial.supplier} setInputState={setSupplier}/>,\n        <Input background='white' placeholder='Ilość' icon={<Search/>} inputState={addMaterial.count} setInputState={setCount}/>,\n        <Input background='white' placeholder='Jednostka miary' icon={<Search/>} inputState={addMaterial.measure} setInputState={setMeasure}/>\n    ]\n}\n\nexport const saveMaterial = (addMaterial, data, setData) => {\n    const postMethod = async () => {\n        try {\n            const dto = {\n                category: addMaterial.category,\n                name: addMaterial.name,\n                supplier: addMaterial.supplier,\n                count: addMaterial.count,\n                measure: addMaterial.measure,\n                notExpired: true\n            }\n            const tool = await post('http://localhost:8080/api/materials', dto, sessionStorage.getItem(\"JWT\"))\n            setData([...data, tool])\n        }catch (exception){}\n    }\n    if(addMaterial.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        postMethod()\n}\n\nexport const deleteMaterial = (id, data, setData) => {\n    const deleteToolAsync = async () => {\n        try {\n            await del('http://localhost:8080/api/materials/'+id, sessionStorage.getItem('JWT'))\n            setData(data.filter((team) => team.id !== id))\n        }catch (exception){}\n    }\n    deleteToolAsync()\n}","import styles from '../MenuPages.module.css'\nimport {MaterialsList} from \"./List\";\nimport {useEffect} from \"react\";\nimport {setMaterialValidation, setToolValidation} from \"../../../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Materials = ({data, setData}) => {\n    const addMaterial= useSelector(state => state.addMaterial)\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        if(addMaterial.category === '' || addMaterial.name === '' || addMaterial.supplier === '' || addMaterial.count === '' || addMaterial.measure === '')\n            dispatch(setMaterialValidation(false))\n        else\n            dispatch(setMaterialValidation(true))\n        //getEmployerByUsername(addTeamEmployer.username, (id)=>dispatch(setTeamEmployerId(id)))\n    }, [addMaterial.category, addMaterial.name, addMaterial.supplier, addMaterial.count, addMaterial.measure])\n\n    return(\n        <div className={styles.MenuPages}>\n            {/*<List labels={labels} sizing={sizing} template={template} data={data}/>*/}\n            <MaterialsList data={data} setData={setData}/>\n        </div>\n    )\n}\n\nexport default Materials","import {useEffect} from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Logout = () => {\n\n    const history = useHistory();\n\n    useEffect(()=>{\n        sessionStorage.removeItem(\"JWT\");\n        sessionStorage.removeItem(\"user\");\n        history.push('/auth/admin')\n        window.location.reload()\n    })\n\n    return(\n        <>\n            <div>\n                Logout\n            </div>\n        </>\n    )\n}\n\nexport default Logout","import {useHistory, useParams} from \"react-router-dom\";\nimport {del, get} from \"../../../api/RestApi\";\nimport Text from \"../../../components/Text/Text\";\nimport DoubleLineText from \"../../../components/DoubleLineText/DoubleLineText\";\nimport Button from \"../../../components/Button/Button\";\nimport {Add, DeleteForever, People} from \"@material-ui/icons\";\nimport {useEffect, useState} from \"react\";\nimport List from \"../../../components/List/List\";\nimport {addEmployerToTeam, deleteEmployer, getTeamEmployers, getTeamModalInputs, saveTeam} from \"./Methods\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    clearAllTeam, setTeamCity,\n    setTeamEmployerId, setTeamEmployerNr,\n    setTeamEmployers,\n    setTeamEmployerTeamId,\n    setTeamEmployerUsername, setTeamEmployerValidation, setTeamName, setTeamUsername, setTeamValidation\n} from \"../../../redux/actions\";\nimport Modal, {openDialog} from \"../../../components/Modal/Modal\";\nimport Input from \"../../../components/Input/Input\";\n\nexport const TeamsList = ({data, setData}) => {\n    const teamEmployers = useSelector(state => state.teamEmployers)\n    const addTeam = useSelector(state => state.addTeam)\n    const addTeamEmployer = useSelector(state => state.addTeamEmployer)\n    const dispatch = useDispatch();\n    const labels = ['Nr', 'Nazwa', 'Placówka', 'Brygadzista', '']\n    const sizing = '0.2fr 1fr 1fr 1fr 120px'\n    const deleteMethod = (id) => deleteEmployer(id, data, setData)\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.name}/>,\n            <Text content={rowData.place}/>,\n            <DoubleLineText firstLine={rowData.leader.name + rowData.leader.lastName} secondLine={rowData.leader.phone}/>,\n            <div className='Center'>\n                <Button icon={<DeleteForever fontSize='small'/>} text='Usuń' onClick={()=>deleteMethod(rowData.id)}/>\n            </div>\n        ]\n    }\n    const getTeamEmployerList = (nr) => {\n        dispatch(setTeamEmployerNr(nr))\n        getTeamEmployers(data[nr].id, teamEmployers, (employers)=>dispatch(setTeamEmployers(employers)))\n        dispatch(setTeamEmployerTeamId(data[nr].id))\n    }\n    const modalInputs = getTeamModalInputs(addTeam, (name)=>dispatch(setTeamName(name)), (city)=>dispatch(setTeamCity(city)), (username)=>dispatch(setTeamUsername(username)))\n    const modalOnClick = () => saveTeam(addTeam, data, setData)\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={data} onClick={getTeamEmployerList} active={addTeamEmployer.nr} cursor='pointer'/>\n            <Modal title='Dodaj Team' inputs={modalInputs} onClick={modalOnClick} onCleaning={()=>dispatch(clearAllTeam())} validate={addTeam.validation} setValidate={(validation)=>dispatch(setTeamValidation(validation))}/>\n            <div className='Right'>\n                <Button icon={<Add fontSize='small'/>} text='Dodaj' onClick={() => openDialog()}/>\n            </div>\n        </>\n\n    )\n}\n\nexport const TeamEmployersList = () => {\n    const addTeamEmployer = useSelector(state => state.addTeamEmployer)\n    const dispatch = useDispatch();\n    const teamEmployers = useSelector(state => state.teamEmployers)\n    const history = useHistory();\n    const labels = ['Nr', 'Imię i Nazwisko', 'Wiek', 'Stanowisko', 'Wynagrodzenie', '']\n    const sizing = '0.2fr 1.1fr 0.5fr 0.8fr 1fr 120px'\n    const deleteMethod = (username) => {\n        //addTeamEmployer.username\n        //dispatch(setTeamEmployerUsername(username))\n        addEmployerToTeam(addTeamEmployer, addTeamEmployer.teamId, null, username, teamEmployers, (employers)=>dispatch(setTeamEmployers(employers)))\n    }\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.name + ' ' + rowData.lastName}/>,\n            <Text content={rowData.age + ' lat'}/>,\n            <Text content={rowData.position}/>,\n            <Text variant='special' content={rowData.salary + ' PLN'}/>,\n            <div className='Center'>\n                <Button icon={<DeleteForever fontSize='small'/>} text='Usuń' onClick={()=>deleteMethod(rowData.username)}/>\n            </div>\n        ]\n    }\n    const modal2Inputs = [<Input background='white' placeholder='Nazwa użytkownika' icon={<People/>} inputState={addTeamEmployer.username} setInputState={(username)=>dispatch(setTeamEmployerUsername(username))}/>]\n    const modal2OnClick = () => {\n        addEmployerToTeam(addTeamEmployer, addTeamEmployer.teamId, addTeamEmployer.teamId, addTeamEmployer.username, teamEmployers, (employers)=>dispatch(setTeamEmployers(employers)))\n        //getTeamEmployers(addTeamEmployer.teamId, teamEmployers, (employers)=>dispatch(setTeamEmployers(employers)))\n    }\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={teamEmployers}/>\n            <Modal title='Dodaj Użytkownika' inputs={modal2Inputs} onClick={modal2OnClick} onCleaning={()=>dispatch(setTeamEmployerUsername(''))} validate={addTeamEmployer.validation} setValidate={(validation)=>dispatch(setTeamEmployerValidation(validation))} id='modal2'/>\n            <div className='Right'>\n                <Button icon={<Add fontSize='small'/>} text='Dodaj' onClick={() => openDialog('modal2')}/>\n            </div>\n        </>\n    )\n}","import styles from '../MenuPages.module.css'\nimport {Add, People} from \"@material-ui/icons\";\nimport Button from \"../../../components/Button/Button\";\nimport {useEffect, useState} from \"react\";\nimport Modal, {openDialog} from \"../../../components/Modal/Modal\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    clearAllTeam,\n    setTeamCity, setTeamEmployerId, setTeamEmployerTeamId,\n    setTeamEmployerUsername, setTeamEmployerValidation,\n    setTeamName,\n    setTeamUsername,\n    setTeamValidation\n} from \"../../../redux/actions\";\nimport {addEmployerToTeam, addTeam, getEmployerByUsername, getTeamModalInputs} from \"./Methods\";\nimport {TeamEmployersList, TeamsList} from \"./List\";\nimport {Route, useHistory} from \"react-router-dom\";\nimport Input from \"../../../components/Input/Input\";\n\nconst Teams = ({data, setData}) => {\n    const history = useHistory();\n    const addTeam = useSelector(state => state.addTeam)\n    const addTeamEmployer = useSelector(state => state.addTeamEmployer)\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        if(addTeam.name === '' || addTeam.city === '' || addTeam.username === '')\n            dispatch(setTeamValidation(false))\n        else\n            dispatch(setTeamValidation(true))\n        if(addTeamEmployer.username === '')\n            dispatch(setTeamEmployerValidation(false))\n        else\n            dispatch(setTeamEmployerValidation(true))\n        //getEmployerByUsername(addTeamEmployer.username, (id)=>dispatch(setTeamEmployerId(id)))\n    }, [addTeam.name, addTeam.city, addTeam.username, addTeamEmployer.username])\n\n    return(\n        <div className={styles.HorizontalSplit2}>\n            <div>\n                <p className={styles.Header}>Teamy</p>\n                <TeamsList data={data} setData={setData}/>\n            </div>\n            <div>\n                {addTeamEmployer.teamId !== -1 ?\n                    <>\n                        <p className={styles.Header}>Członkowie teamu</p>\n                        {/*<Route path={'/admin/teams/:teamId'} render={()=>(<TeamEmployersList/>)}/>*/}\n                        <TeamEmployersList/>\n                    </> :\n                    <p className={styles.Header}>Wybierz team, aby zarządzać jego członkami</p>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Teams","import Input from \"../../../components/Input/Input\";\nimport {Search} from \"@material-ui/icons\";\nimport {post, get, del, put} from \"../../../api/RestApi\";\n\nexport const getTaskModalInputs = (addTask, setName, setTeamName) => {\n    return [\n        <Input background='white' placeholder='Nazwa' icon={<Search/>} inputState={addTask.name} setInputState={setName}/>,\n        <Input background='white' placeholder='Nawa teamu' icon={<Search/>} inputState={addTask.teamName} setInputState={setTeamName}/>\n    ]\n}\n\nexport const saveTask = (addTask, data, setData) => {\n    const postMethod = async () => {\n        try {\n            const dto = {\n                name: addTask.name,\n                team: {\n                    name: addTask.teamName\n                },\n                notExpired: true\n            }\n            const task = await post('http://localhost:8080/api/tasks', dto, sessionStorage.getItem(\"JWT\"))\n            setData([...data, task])\n        }catch (exception){}\n    }\n    if(addTask.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        postMethod()\n}\n\nexport const getTaskTools = (id, state, setState) => {\n    const getMethod = async () => {\n        try{\n            const tools = await get('http://localhost:8080/api/tools?taskId='+id, sessionStorage.getItem(\"JWT\"))\n            console.log(tools)\n            setState(tools)\n        } catch (exception){}\n    }\n    getMethod()\n    console.log(state)\n}\n\nexport const addToolToTask = (addToolTask, taskId, setToolId, name, state, setState) => {\n    const putMethod = async () => {\n        try{\n            const tool = await get('http://localhost:8080/api/tools/'+name, sessionStorage.getItem(\"JWT\"))\n            const dto = {\n                id: tool.id,\n                task: {\n                    id: setToolId !== null ? setToolId : -1\n                }\n            }\n            await put('http://localhost:8080/api/tools', dto, sessionStorage.getItem(\"JWT\"))\n            const tools = await get('http://localhost:8080/api/tools?taskId='+taskId, sessionStorage.getItem(\"JWT\"))\n            setState(tools)\n        } catch (exception){\n            alert(\"Brak narzędzia o wskazanej nazwie\")\n        }\n    }\n    if(setToolId != null && addToolTask.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        putMethod()\n}\n\n\nexport const getTaskMaterials = (id, state, setState) => {\n    const getMethod = async () => {\n        try{\n            const materials = await get('http://localhost:8080/api/materials?taskId='+id, sessionStorage.getItem(\"JWT\"))\n            console.log(materials)\n            setState(materials)\n        } catch (exception){}\n    }\n    getMethod()\n    console.log(state)\n}\n\nexport const addMaterialToTask = (addMaterialTask, taskId, setMaterialId, name, state, setState) => {\n    const putMethod = async () => {\n        try{\n            const material = await get('http://localhost:8080/api/materials/'+name, sessionStorage.getItem(\"JWT\"))\n            const dto = {\n                id: material.id,\n                task: {\n                    id: setMaterialId !== null ? setMaterialId : -1\n                }\n            }\n            console.log(setMaterialId)\n            console.log(dto)\n            await put('http://localhost:8080/api/materials', dto, sessionStorage.getItem(\"JWT\"))\n            const materials = await get('http://localhost:8080/api/materials?taskId='+taskId, sessionStorage.getItem(\"JWT\"))\n            setState(materials)\n        } catch (exception){\n            alert(\"Brak materiału o wskazanej nazwie\")\n        }\n    }\n    if(setMaterialId != null && addMaterialTask.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        putMethod()\n}\n\n\nexport const deleteTask = (id, data, setData) => {\n    const deleteTaskAsync = async () => {\n        try {\n            await del('http://localhost:8080/api/tasks/'+id, sessionStorage.getItem('JWT'))\n            setData(data.filter((team) => team.id !== id))\n        }catch (exception){\n\n        }\n    }\n    deleteTaskAsync()\n}","import Text from \"../../../components/Text/Text\";\nimport DoubleLineText from \"../../../components/DoubleLineText/DoubleLineText\";\nimport Button from \"../../../components/Button/Button\";\nimport {Add, DeleteForever, ExpandMore, People} from \"@material-ui/icons\";\nimport List from \"../../../components/List/List\";\nimport {\n    addMaterialToTask,\n    addToolToTask,\n    deleteTask, getTaskMaterials,\n    getTaskModalInputs, getTaskTools,\n    saveTask,\n} from \"./Methods\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    clearAllTask,\n    setTaskMaterialMaterialId,\n    setTaskMaterialMaterialName,\n    setTaskMaterialNr,\n    setTaskMaterials, setTaskMaterialTaskId,\n    setTaskMaterialValidation,\n    setTaskName,\n    setTaskTeamName,\n    setTaskToolNr,\n    setTaskTools,\n    setTaskToolTaskId,\n    setTaskToolToolName,\n    setTaskToolValidation,\n    setTaskValidation,\n    setTeamEmployerNr,\n    setTeamEmployerTeamId,\n} from \"../../../redux/actions\";\nimport Modal, {openDialog} from \"../../../components/Modal/Modal\";\nimport Input from \"../../../components/Input/Input\";\n\nexport const TaskList = ({data, setData}) => {\n    const taskTools = useSelector(state => state.taskTools)\n    const taskMaterials = useSelector(state => state.taskMaterials)\n    const addTask = useSelector(state => state.addTask)\n    const addTaskTool = useSelector(state => state.addTaskTool)\n    const dispatch = useDispatch();\n\n    const labels = ['', 'Nazwa', 'Team/Brygadzista', '']\n    const sizing = '0.2fr 1.2fr 1.2fr 120px'\n    const deleteMethod = (id) => deleteTask(id, data, setData)\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.name}/>,\n            <DoubleLineText firstLine={rowData.team.name} secondLine={rowData.team.leader.name + ' ' + rowData.team.leader.lastName}/>,\n            // <Text content={rowData.status}/>,\n            <div className='Center'>\n                <Button icon={<DeleteForever fontSize='small'/>} text='Usuń' onClick={()=>deleteMethod(rowData.id)}/>\n            </div>\n        ]\n    }\n    const getTaskToolsList = (nr) => {\n        dispatch(setTaskToolNr(nr))\n        dispatch(setTaskMaterialNr(nr))\n        getTaskTools(data[nr].id, taskTools, (tools)=>dispatch(setTaskTools(tools)))\n        getTaskMaterials(data[nr].id, taskMaterials, (materials)=>dispatch(setTaskMaterials(materials)))\n        dispatch(setTaskToolTaskId(data[nr].id))\n        dispatch(setTaskMaterialTaskId(data[nr].id))\n    }\n    const modalInputs = getTaskModalInputs(addTask, (name)=>dispatch(setTaskName(name)), (teamName)=>dispatch(setTaskTeamName(teamName)))\n    const modalOnClick = () => saveTask(addTask, data, setData)\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={data} onClick={getTaskToolsList} active={addTaskTool.nr} cursor='pointer'/>\n            <Modal title='Dodaj Team' inputs={modalInputs} onClick={modalOnClick} onCleaning={()=>dispatch(clearAllTask())} validate={addTask.validation} setValidate={(validation)=>dispatch(setTaskValidation(validation))}/>\n            <div className='Right'>\n                <Button icon={<Add fontSize='small'/>} text='Dodaj' onClick={() => openDialog()}/>\n            </div>\n        </>\n\n    )\n}\n\n\nexport const TaskToolsList = () => {\n    const addTaskTool = useSelector(state => state.addTaskTool)\n    const dispatch = useDispatch();\n    const taskTools = useSelector(state => state.taskTools)\n    const labels = ['Nr', 'Kategoria', 'Nazwa', 'Model', 'Nr seryjny', '']\n    const sizing = '0.2fr 1fr 1fr 1fr 1fr 120px'\n    const deleteMethod = (toolName) => {\n        addToolToTask(addTaskTool, addTaskTool.taskId, null, toolName, taskTools, (tools)=>dispatch(setTaskTools(tools)))\n    }\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.category}/>,\n            <Text content={rowData.name}/>,\n            <Text content={rowData.model}/>,\n            <Text content={rowData.identityNo}/>,\n            /*<DoubleLineText firstLine={rowData.model} secondLine={rowData.identityNo}/>,\n            <Text content={rowData.buyDate}/>,\n            <DoubleLineText firstLine={rowData.price+' PLN'} secondLine={1.23*rowData.price+' PLN'}/>,*/\n            <div className='Center'>\n                <Button icon={<DeleteForever fontSize='small'/>} text='Usuń' onClick={()=>deleteMethod(rowData.name)}/>\n            </div>\n        ]\n    }\n    const modal2Inputs = [<Input background='white' placeholder='Nazwa użytkownika' icon={<People/>} inputState={addTaskTool.toolName} setInputState={(toolName)=>dispatch(setTaskToolToolName(toolName))}/>]\n    const modal2OnClick = () => {\n        addToolToTask(addTaskTool, addTaskTool.taskId, addTaskTool.taskId, addTaskTool.toolName, taskTools, (tools)=>dispatch(setTaskTools(tools)))\n    }\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={taskTools}/>\n            <Modal title='Dodaj narzędzie' inputs={modal2Inputs} onClick={modal2OnClick} onCleaning={()=>dispatch(setTaskToolToolName(''))} validate={addTaskTool.validation} setValidate={(validation)=>dispatch(setTaskToolValidation(validation))} id='modal2'/>\n            <div className='Right'>\n                <Button icon={<Add fontSize='small'/>} text='Dodaj' onClick={() => openDialog('modal2')}/>\n            </div>\n        </>\n    )\n}\n\nexport const TaskMaterialsList = () => {\n    const addTaskMaterial = useSelector(state => state.addTaskMaterial)\n    const dispatch = useDispatch();\n    const taskMaterials = useSelector(state => state.taskMaterials)\n    const labels = ['Nr', 'Kategoria', 'Nazwa', 'Dostawca', 'Ilość/miara', '']\n    const sizing = '0.2fr 1fr 1fr 1fr 1fr 120px'\n    const deleteMethod = (toolName) => {\n        addMaterialToTask(addTaskMaterial, addTaskMaterial.taskId, null, toolName, taskMaterials, (materials)=>dispatch(setTaskMaterials(materials)))\n    }\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.category}/>,\n            <Text content={rowData.name}/>,\n            <Text content={rowData.supplier}/>,\n            <DoubleLineText firstLine={rowData.count+' szt.'} secondLine={rowData.measure}/>,\n            <div className='Center'>\n                <Button icon={<DeleteForever fontSize='small'/>} text='Usuń' onClick={()=>deleteMethod(rowData.name)}/>\n            </div>\n        ]\n    }\n    const modal2Inputs = [<Input background='white' placeholder='Nazwa materiału' icon={<People/>} inputState={addTaskMaterial.materialName} setInputState={(materialName)=>dispatch(setTaskMaterialMaterialName(materialName))}/>]\n    const modal2OnClick = () => {\n        addMaterialToTask(addTaskMaterial, addTaskMaterial.taskId, addTaskMaterial.taskId, addTaskMaterial.materialName, taskMaterials, (materials)=>dispatch(setTaskMaterials(materials)))\n    }\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={taskMaterials}/>\n            <Modal title='Dodaj narzędzie' inputs={modal2Inputs} onClick={modal2OnClick} onCleaning={()=>dispatch(setTaskMaterialMaterialName(''))} validate={addTaskMaterial.validation} setValidate={(validation)=>dispatch(setTaskMaterialValidation(validation))} id='modal3'/>\n            <div className='Right'>\n                <Button icon={<Add fontSize='small'/>} text='Dodaj' onClick={() => openDialog('modal3')}/>\n            </div>\n        </>\n    )\n}\n","import styles from '../MenuPages.module.css'\nimport List from \"../../../components/List/List\";\nimport Text from \"../../../components/Text/Text\";\nimport DoubleLineText from \"../../../components/DoubleLineText/DoubleLineText\";\nimport {ExpandMore} from \"@material-ui/icons\";\nimport {TaskList, TaskMaterialsList, TaskToolsList} from \"./List\";\nimport {TeamEmployersList, TeamsList} from \"../Teams/List\";\nimport {useEffect} from \"react\";\nimport {\n    setTaskMaterialValidation,\n    setTaskToolValidation,\n    setTaskValidation,\n    setTeamEmployerValidation,\n    setTeamValidation\n} from \"../../../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Tasks = ({data, setData}) => {\n    const addTask = useSelector(state => state.addTask)\n    const addTaskTool = useSelector(state => state.addTaskTool)\n    const addTaskMaterial = useSelector(state => state.addTaskMaterial)\n    const dispatch = useDispatch();\n    /*const labels = ['', 'Nazwa', 'Team/Brygadzista', 'Status', 'Opis', '']\n    const sizing = '0.2fr 1.5fr 1.5fr 1fr 120px'\n    const template = (nr, rowData) => {\n        return [\n            <Text content={nr} variant='bold'/>,\n            <Text content={rowData.name}/>,\n            <DoubleLineText firstLine={rowData.team} secondLine={rowData.leader}/>,\n            <Text content={rowData.state}/>,\n        ]\n    }\n    const data = [{\n        name: 'Księgarnia Reader - Frontend',\n        team: 'Frontend Dev',\n        leader: 'John Smith',\n        dateFrom: '01.07.2021',\n        dateTo: '01.09.2021',\n        price: 25000,\n        state: 'Realizowane',\n        description: 'Stworzenie GUI księgarni internetowej dla firmy Reader sp. Z O. O.'\n    },{\n        name: 'Księgarnia Reader - Frontend',\n        team: 'Frontend Dev',\n        leader: 'John Smith',\n        dateFrom: '01.07.2021',\n        dateTo: '01.09.2021',\n        price: 25000,\n        state: 'Oczekujące',\n        description: 'Stworzenie GUI księgarni internetowej dla firmy Reader sp. Z O. O.'\n    }]*/\n    useEffect(()=>{\n        if(addTask.name === '' || addTask.teamName === '')\n            dispatch(setTaskValidation(false))\n        else\n            dispatch(setTaskValidation(true))\n        if(addTaskTool.toolName === '')\n            dispatch(setTaskToolValidation(false))\n        else\n            dispatch(setTaskToolValidation(true))\n        if(addTaskMaterial.materialName === '')\n            dispatch(setTaskMaterialValidation(false))\n        else\n            dispatch(setTaskMaterialValidation(true))\n    }, [addTask.name, addTask.teamName, addTaskTool.toolName, addTaskMaterial.materialName])\n    return(\n        <div className={styles.HorizontalSplit2}>\n            <div>\n                <p className={styles.Header}>Zadania</p>\n                {/*<List labels={labels} sizing={sizing} template={template} data={data}/>*/}\n                <TaskList data={data} setData={setData}/>\n            </div>\n            <div>\n                {addTaskTool.taskId !== -1 ?\n                    <>\n                        <p className={styles.Header}>Narzędzia</p>\n                        <TaskToolsList/>\n                        <p className={styles.Header}>Materiały</p>\n                        <TaskMaterialsList/>\n                    </> :\n                    <p className={styles.Header}>Wybierz zadanie, aby zarządzać jego zasobami</p>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Tasks","import {useDispatch, useSelector} from \"react-redux\";\nimport {del} from \"../../../api/RestApi\";\nimport Text from \"../../../components/Text/Text\";\nimport DoubleLineText from \"../../../components/DoubleLineText/DoubleLineText\";\nimport Button from \"../../../components/Button/Button\";\nimport {Add, DeleteForever} from \"@material-ui/icons\";\nimport {\n    clearAllRegister,\n    setRegisterValidation,\n} from \"../../../redux/actions\";\nimport List from \"../../../components/List/List\";\nimport Modal, {openDialog} from \"../../../components/Modal/Modal\";\nimport {\n    deleteEmployer,\n    getEmployerModalInputs, saveEmployer,\n} from \"./Methods\";\n\nexport const EmployersList = ({data, setData}) => {\n    const register= useSelector(state => state.register)\n    const dispatch = useDispatch();\n    const labels = ['Nr', 'Imię i nazwisko / Nazwa użytkownika', 'Wiek/Pesel', 'Adres', 'Kontakt', 'Stanowisko', 'Wynagrodzenie', 'Usuń']\n    const sizing = '0.2fr 1.2fr 0.9fr 1.2fr 0.9fr 0.6fr 0.6fr 120px'\n    const deleteMethod = (id) => deleteEmployer(id, data, setData)\n    const template = (nr, rowData) => {\n        console.log(rowData)\n        return [\n            <Text content={nr} variant='bold'/>,\n            // <Text content={rowData.name+' '+rowData.lastName}/>,\n            <DoubleLineText firstLine={rowData.name+' '+rowData.lastName} secondLine={rowData.username}/>,\n            <DoubleLineText firstLine={rowData.age+' lat'} secondLine={rowData.pessel}/>,\n            <DoubleLineText firstLine={rowData.street} secondLine={rowData.cityCode+' '+rowData.city}/>,\n            <Text content={rowData.phone}/>,\n            <Text content={rowData.position}/>,\n            <Text content={rowData.salary+' PLN'} variant='special'/>,\n            <div className='Center'>\n                <Button icon={<DeleteForever fontSize='small'/>} text='Usuń' onClick={()=>deleteMethod(rowData.id)}/>\n            </div>\n        ]\n    }\n\n    const modalInputs = getEmployerModalInputs()\n    const modalOnClick = () => saveEmployer(register, data, setData)\n    return(\n        <>\n            <List labels={labels} sizing={sizing} template={template} data={data} cursor='pointer'/>\n            <Modal title='Dodaj Team' inputs={modalInputs} onClick={modalOnClick} onCleaning={()=>dispatch(clearAllRegister())} validate={register.validation} setValidate={(validation)=>dispatch(setRegisterValidation(validation))}/>\n            <div className='Right'>\n                <Button icon={<Add fontSize='small'/>} text='Dodaj' onClick={() => openDialog()}/>\n            </div>\n        </>\n\n    )\n}","import {del, post} from \"../../../api/RestApi\";\nimport Input from \"../../../components/Input/Input\";\nimport {Search} from \"@material-ui/icons\";\nimport RegistrationPanel from \"../../AuthPages/RegistrationPanel\";\n\nexport const getEmployerModalInputs = () => {\n    return [<RegistrationPanel type='add'/>]\n}\n\nexport const saveEmployer = (register, data, setData) => {\n    const postMethod = async () => {\n        try {\n            const dto = {\n                username: register.username,\n                name: register.name,\n                lastName: register.lastName,\n                age: register.age,\n                pessel: register.pessel,\n                street: register.street,\n                cityCode: register.cityCode,\n                city: register.city,\n                phone: register.phone,\n                position: register.position,\n                salary: register.salary,\n                password: register.password,\n                role: register.role\n            }\n            const employer = await post('http://localhost:8080/api/employers', dto, sessionStorage.getItem(\"JWT\"))\n            setData([...data, employer])\n        }catch (exception){}\n    }\n    if(register.validation === false)\n        alert(\"Wszystkie pola są obowiązkowe\")\n    else\n        postMethod()\n}\n\nexport const deleteEmployer = (id, data, setData) => {\n    const deleteEmployerAsync = async () => {\n        try {\n            await del('http://localhost:8080/api/employers/'+id, sessionStorage.getItem('JWT'))\n            setData(data.filter((team) => team.id !== id))\n        }catch (exception){}\n    }\n    deleteEmployerAsync()\n}","import styles from '../MenuPages.module.css'\nimport {EmployersList, MaterialsList} from \"./List\";\nimport {useEffect} from \"react\";\nimport {setMaterialValidation, setToolValidation} from \"../../../redux/actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Employers = ({data, setData}) => {\n    const register= useSelector(state => state.register)\n    const dispatch = useDispatch();\n\n    return(\n        <div className={styles.MenuPages}>\n            <EmployersList data={data} setData={setData}/>\n        </div>\n    )\n}\n\nexport default Employers","import styles from './Body.module.css'\nimport {Route} from 'react-router-dom'\nimport Team from \"../../pages/EmployerPages/Team/Team\";\nimport Task from \"../../pages/EmployerPages/Task/Task\";\nimport Tools from \"../../pages/AdminPages/Tools/Tools\";\nimport Materials from \"../../pages/AdminPages/Materials/Materials\";\nimport {useEffect, useState} from \"react\";\nimport {getEmployers} from \"../../api/EmployersApi\";\nimport Redirect from \"../Redirect/Redirect\";\nimport {get} from \"../../api/RestApi\";\nimport Logout from \"../Logout/Logout\";\nimport Teams from \"../../pages/AdminPages/Teams/Teams\";\nimport Tasks from \"../../pages/AdminPages/Tasks/Tasks\";\nimport Employers from \"../../pages/AdminPages/Employers/Employers\";\n\nconst Body = () => {\n\n    const [employersDataActive, setEmployersDataActive] = useState([])\n    const [employersDataArchival, setEmployersDataArchival] = useState([])\n\n    const [teamsData, setTeamsData] = useState([])\n    const [toolsData, setToolsData] = useState([])\n    const [materialsData, setMaterialsData] = useState([])\n    const [tasksData, setTasksData] = useState([])\n\n    const [teamData, setTeamData] = useState([])\n    const [taskData, setTaskData] = useState([])\n\n    const getInitData = () => {\n        const getInitDataAsync = async () => {\n            try {\n                const initEmployersDataActive = await getEmployers(sessionStorage.getItem(\"JWT\"), true)\n                setEmployersDataActive(initEmployersDataActive)\n                const initEmployersDataArchival = await getEmployers(sessionStorage.getItem(\"JWT\"), false)\n                setEmployersDataArchival(initEmployersDataArchival)\n\n                const initTeamsData = await get('http://localhost:8080/api/teams', sessionStorage.getItem(\"JWT\"))\n                setTeamsData(initTeamsData)\n                const initToolsData = await get('http://localhost:8080/api/tools', sessionStorage.getItem(\"JWT\"))\n                setToolsData(initToolsData)\n                const initMaterialsData = await get('http://localhost:8080/api/materials', sessionStorage.getItem(\"JWT\"))\n                setMaterialsData(initMaterialsData)\n                const initTasksData = await get('http://localhost:8080/api/tasks', sessionStorage.getItem(\"JWT\"))\n                setTasksData(initTasksData)\n\n                const initTeamData = await get('http://localhost:8080/api/teams/me', sessionStorage.getItem(\"JWT\"))\n                setTeamData(initTeamData)\n                const initTaskData = await get('http://localhost:8080/api/tasks/me', sessionStorage.getItem(\"JWT\"))\n                setTaskData(initTaskData)\n            }catch (exception){\n\n            }\n        }\n        getInitDataAsync()\n    }\n\n    useEffect(()=>{\n        getInitData()\n    },[])\n\n    return(\n        <div className={styles.Body}>\n            {/*<Route path='/admin/employers' exact render={()=>(<Redirect to='/admin/employers/active'/>)}/>\n            <Route path='/admin/employers/active' render={()=>(<Employers data={employersDataActive} setData={setEmployersDataActive} reversedData={employersDataArchival} setReversedData={setEmployersDataArchival}/>)} />\n            <Route path='/admin/employers/archival' render={()=>(<Employers data={employersDataArchival} setData={setEmployersDataArchival} reversedData={employersDataActive} setReversedData={setEmployersDataActive}/>)} />*/}\n            <Route path='/admin/employers' render={()=>(<Employers data={employersDataActive} setData={setEmployersDataActive}/>)}/>\n            <Route path='/admin/teams' render={()=>(<Teams data={teamsData} setData={setTeamsData}/>)}/>\n            <Route path='/admin/tasks' render={()=><Tasks data={tasksData} setData={setTasksData}/>}/>\n            <Route path='/admin/tools' render={()=><Tools data={toolsData} setData={setToolsData}/>}/>\n            <Route path='/admin/materials' render={()=><Materials data={materialsData} setData={setMaterialsData}/> }/>\n            <Route path='/admin/logout' component={Logout}/>\n\n            <Route path='/employer/teams' render={()=>(<Team data={teamData} setData={setTeamData}/>)}/>\n            <Route path='/employer/tasks' render={()=><Task data={taskData} setData={setTaskData}/>}/>\n            <Route path='/employer/logout' component={Logout}/>\n        </div>\n    )\n}\n\nexport default Body","import styles from './Menu.module.css'\nimport {\n    Person,\n    People,\n    Assignment,\n    Build,\n    Layers,\n    ShoppingCart,\n    AttachMoney,\n    Assessment,\n    Description,\n    PowerSettingsNew\n} from '@material-ui/icons';\nimport {NavLink} from 'react-router-dom'\nimport {useSelector} from \"react-redux\";\n\nconst Option = ({icon, text}) => {\n    return(\n        <div className={styles.Option}>\n            {icon}\n            <p>{text}</p>\n        </div>\n    )\n}\n\nconst EmployerMenu = () => {\n    return(\n        <div className={styles.Menu}>\n            <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/employer/teams'>\n                <Option icon={<People/>} text='Zespół'/>\n            </NavLink>\n            <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/employer/tasks'>\n                <Option icon={<Assignment/>} text='Zadania'/>\n            </NavLink>\n            <NavLink activeClassName={styles.ActiveLink} className={styles.Link} to='/employer/logout'>\n                <Option icon={<PowerSettingsNew/>} text='Wyloguj'/>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default EmployerMenu","import AdminMenu from \"../Menu/AdminMenu\";\nimport Body from \"../Body/Body\";\nimport Head from \"../Head/Head\";\nimport {useEffect, useState} from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport {useSelector} from \"react-redux\";\nimport EmployerMenu from \"../Menu/EmployerMenu\";\n\nconst Panel = () => {\n    const history = useHistory();\n\n    useEffect(()=>{\n        const checkAuthorities = async () => {\n            if(sessionStorage.getItem(\"JWT\") === null)\n                history.push(\"/auth/admin\");\n        }\n        checkAuthorities()\n    },[])\n\n    return(\n        <>\n            <div className='FixTop'>\n                <Head/>\n                {sessionStorage.getItem(\"user\") === \"Admin\" ? <AdminMenu/> : <EmployerMenu/>}\n            </div>\n            <Body/>\n        </>\n    )\n}\n\nexport default Panel","import './App.css';\nimport Head from \"./components/Head/Head\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport AuthPage from \"./components/Auth/AuthPage\";\nimport Panel from \"./components/Panel/Panel\";\nimport Redirect from \"./components/Redirect/Redirect\";\n\nfunction App() {\n  return (\n    <div className='App'>\n        <Router>\n            <Route path='/' exact render={()=>(<Redirect to='/auth'/>)}/>\n            <Route path='/auth' component={AuthPage}/>\n            <Route path='/admin' component={Panel}/>\n            <Route path='/employer' component={Panel}/>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\";\n\nconst addTeamReducer = (state = {name: '', city: '', username: '', validation: false}, action) => {\n    switch (action.type){\n        case 'SET_TEAM_NAME':\n            return {name: action.payload, city: state.city, username: state.username, validation: state.validation}\n        case 'SET_TEAM_CITY':\n            return {name: state.name, city: action.payload, username: state.username, validation: state.validation}\n        case 'SET_TEAM_USERNAME':\n            return {name: state.name, city: state.city, username: action.payload, validation: state.validation}\n        case 'SET_TEAM_VALIDATION':\n            return {name: state.name, city: state.city, username: state.username, validation: action.payload}\n        case 'CLEAR_ALL_TEAM':\n            return {name: '', city: '', username: '', validation: state.validation}\n        default:\n            return state\n    }\n}\n\nconst registerReducer = (state = {\n    step: 1, username: '', password: '', passwordRepeat: '',\n    name: '', lastName: '', age: '', pessel: '',\n    street: '', city: '', cityCode: '', phone: '',\n    companyName: '', role: '', position: '', salary: '', validation: false\n}, action) => {\n    switch (action.type){\n        case 'SET_REGISTER_STEP':\n            return {\n                step: action.payload, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_USERNAME':\n            return {\n                step: state.step, username: action.payload, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_PASSWORD':\n            return {\n                step: state.step, username: state.username, password: action.payload, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_PASSWORD_REPEAT':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: action.payload,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_NAME':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: action.payload, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_LAST_NAME':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: action.payload, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_AGE':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: action.payload, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_PESSEL':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: action.payload,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_STREET':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: action.payload, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_CITY':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: action.payload, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_CITY_CODE':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: action.payload, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_PHONE':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: action.payload,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_COMPANY_NAME':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: action.payload, role: state.role, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_ROLE':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: action.payload, position: state.position, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_POSITION':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: action.payload, salary: state.salary, validation: state.validation\n            }\n        case 'SET_REGISTER_SALARY':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: action.payload, validation: state.validation\n            }\n        case 'SET_REGISTER_VALIDATION':\n            return {\n                step: state.step, username: state.username, password: state.password, passwordRepeat: state.passwordRepeat,\n                name: state.name, lastName: state.lastName, age: state.age, pessel: state.pessel,\n                street: state.street, city: state.city, cityCode: state.cityCode, phone: state.phone,\n                companyName: state.companyName, role: state.role, position: state.position, salary: state.salary, validation: action.payload\n            }\n        case 'CLEAR_ALL_REGISTER':\n            return {\n                step: 1, username: '', password: '', passwordRepeat: '',\n                name: '', lastName: '', age: '', pessel: '',\n                street: '', city: '', cityCode: '', phone: '',\n                companyName: '', role: '', position: '', salary: '', validation: false\n            }\n        default:\n            return state\n    }\n}\n\nconst teamEmployersReducer = (state=[], action) => {\n    switch (action.type){\n        case 'SET_TEAM_EMPLOYERS':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nconst addTeamEmployerReducer = (state={nr: -1, teamId: -1, employerId: -1, username: '', validation: false}, action) => {\n    switch (action.type){\n        case 'SET_TEAM_EMPLOYER_USERNAME':\n            return {nr: state.nr, teamId: state.teamId, employerId: state.employerId, username: action.payload, validation: state.validation}\n        case 'SET_TEAM_EMPLOYER_VALIDATION':\n            return {nr: state.nr, teamId: state.teamId, employerId: state.employerId, username: state.username, validation: action.payload}\n        case 'SET_TEAM_EMPLOYER_TEAM_ID':\n            return {nr: state.nr, teamId: action.payload, employerId: state.employerId, username: state.username, validation: state.validation}\n        case 'SET_TEAM_EMPLOYER_ID':\n            return {nr: state.nr, teamId: state.teamId, employerId: action.payload, username: state.username, validation: state.validation}\n        case 'SET_TEAM_EMPLOYER_NR':\n            return {nr: action.payload, teamId: state.teamId, employerId: state.employerId, username: state.username, validation: state.validation}\n        default:\n            return state\n    }\n}\n\nconst addToolReducer = (state={category: '', name: '', model: '', identityNo: '', validation: false}, action) => {\n    switch (action.type){\n        case 'SET_TOOL_CATEGORY':\n            return {category: action.payload, name: state.name, model: state.model, identityNo: state.identityNo, validation: state.validation}\n        case 'SET_TOOL_NAME':\n            return {category: state.category, name: action.payload, model: state.model, identityNo: state.identityNo, validation: state.validation}\n        case 'SET_TOOL_MODEL':\n            return {category: state.category, name: state.name, model: action.payload, identityNo: state.identityNo, validation: state.validation}\n        case 'SET_TOOL_IDENTITY_NO':\n            return {category: state.category, name: state.name, model: state.model, identityNo: action.payload, validation: state.validation}\n        case 'SET_TOOL_VALIDATION':\n            return {category: state.category, name: state.name, model: state.model, identityNo: state.identityNo, validation: action.payload}\n        case 'CLEAR_ALL_TOOL':\n            return {category: '', name: '', model: '', identityNo: '', validation: false}\n        default:\n            return state\n    }\n}\n\nconst addMaterialReducer = (state={category: '', name: '', supplier: '', count: '', measure: '', validation: false}, action) => {\n    switch (action.type){\n        case 'SET_MATERIAL_CATEGORY':\n            return {category: action.payload, name: state.name, supplier: state.supplier, count: state.count, measure: state.measure, validation: state.validation}\n        case 'SET_MATERIAL_NAME':\n            return {category: state.category, name: action.payload, supplier: state.supplier, count: state.count, measure: state.measure, validation: state.validation}\n        case 'SET_MATERIAL_SUPPLIER':\n            return {category: state.category, name: state.name, supplier: action.payload, count: state.count, measure: state.measure, validation: state.validation}\n        case 'SET_MATERIAL_COUNT':\n            return {category: state.category, name: state.name, supplier: state.supplier, count: action.payload, measure: state.measure, validation: state.validation}\n        case 'SET_MATERIAL_MEASURE':\n            return {category: state.category, name: state.name, supplier: state.supplier, count: state.count, measure: action.payload, validation: state.validation}\n        case 'SET_MATERIAL_VALIDATION':\n            return {category: state.category, name: state.name, supplier: state.supplier, count: state.count, measure: state.measure, validation: action.payload}\n        case 'CLEAR_ALL_MATERIAL':\n            return {category: '', name: '', supplier: '', count: '', measure: '', validation: false}\n        default:\n            return state\n    }\n}\n\nconst addTaskReducer = (state={name: '', teamName: '', validation: false}, action) => {\n    switch (action.type){\n        case 'SET_TASK_NAME':\n            return {name: action.payload, teamName: state.teamName, validation: state.validation}\n        case 'SET_TASK_TEAM_NAME':\n            return {name: state.name, teamName: action.payload, validation: state.validation}\n        case 'SET_TASK_VALIDATION':\n            return {name: state.name, teamName: state.teamName, validation: action.payload}\n        case 'CLEAR_ALL_TASK':\n            return {name: '', teamName: '', validation: false}\n        default:\n            return state\n    }\n}\n\nconst taskToolsReducer = (state=[], action) => {\n    switch (action.type){\n        case 'SET_TASK_TOOLS':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nconst addTaskToolReducer = (state={nr: -1, taskId: -1, toolId: -1, toolName: '', validation: false}, action) => {\n    switch (action.type){\n        case 'SET_TASK_TOOL_NR':\n            return {nr: action.payload, taskId: state.taskId, toolId: state.taskId, toolName: state.toolName, validation: state.validation}\n        case 'SET_TASK_TOOL_TASK_ID':\n            return {nr: state.nr, taskId: action.payload, toolId: state.taskId, toolName: state.toolName, validation: state.validation}\n        case 'SET_TASK_TOOL_TOOL_ID':\n            return {nr: state.nr, taskId: state.taskId, toolId: action.payload, toolName: state.toolName, validation: state.validation}\n        case 'SET_TASK_TOOL_TOOL_NAME':\n            return {nr: state.nr, taskId: state.taskId, toolId: state.taskId, toolName: action.payload, validation: state.validation}\n        case 'SET_TASK_TOOL_VALIDATION':\n            return {nr: state.nr, taskId: state.taskId, toolId: state.taskId, toolName: state.toolName, validation: action.payload}\n        case 'CLEAR_ALL_TASK_TOOL':\n            return {nr: -1, taskId: -1, toolId: -1, toolName: '', validation: false}\n        default:\n            return state\n    }\n}\n\nconst taskMaterialsReducer = (state=[], action) => {\n    switch (action.type){\n        case 'SET_TASK_MATERIALS':\n            return action.payload\n        default:\n            return state\n    }\n}\n\nconst addTaskMaterialReducer = (state={nr: -1, taskId: -1, materialId: -1, materialName: '', validation: false}, action) => {\n    switch (action.type){\n        case 'SET_TASK_MATERIAL_NR':\n            return {nr: action.payload, taskId: state.taskId, toolId: state.taskId, materialName: state.materialName, validation: state.validation}\n        case 'SET_TASK_MATERIAL_TASK_ID':\n            return {nr: state.nr, taskId: action.payload, toolId: state.taskId, materialName: state.materialName, validation: state.validation}\n        case 'SET_TASK_MATERIAL_MATERIAL_ID':\n            return {nr: state.nr, taskId: state.taskId, toolId: action.payload, materialName: state.materialName, validation: state.validation}\n        case 'SET_TASK_MATERIAL_MATERIAL_NAME':\n            return {nr: state.nr, taskId: state.taskId, toolId: state.taskId, materialName: action.payload, validation: state.validation}\n        case 'SET_TASK_MATERIAL_VALIDATION':\n            return {nr: state.nr, taskId: state.taskId, toolId: state.taskId, materialName: state.materialName, validation: action.payload}\n        case 'CLEAR_ALL_TASK_MATERIAL':\n            return {nr: -1, taskId: -1, materialId: -1, materialName: '', validation: false}\n        default:\n            return state\n    }\n}\n\nconst reducers = combineReducers({\n    addTeam: addTeamReducer,\n    register: registerReducer,\n    teamEmployers: teamEmployersReducer,\n    addTeamEmployer: addTeamEmployerReducer,\n    addTool: addToolReducer,\n    addMaterial: addMaterialReducer,\n    addTask: addTaskReducer,\n    taskTools: taskToolsReducer,\n    addTaskTool: addTaskToolReducer,\n    taskMaterials: taskMaterialsReducer,\n    addTaskMaterial: addTaskMaterialReducer,\n})\n\nexport default reducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from \"redux\";\nimport reducers from './redux/reducers'\nimport {Provider} from 'react-redux'\nimport {setTeamName} from \"./redux/actions\";\n\nexport const store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\n/*store.subscribe(() => console.log(store.getState()))\nstore.dispatch(setTeamName('TestTeamName'))*/\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}